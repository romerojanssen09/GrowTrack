@model Project_Creation.Models.ViewModels.MarketplaceViewModel

@{
    ViewData["Title"] = "Marketplace";
}

<div class="container mt-4">
    <div class="row">
        <!-- Sidebar -->
        <div class="col-lg-3 mb-4">
            <div class="card shadow">
                <div class="card-header bg-primary text-white">
                    <h5 class="mb-0">Categories</h5>
                </div>
                <div class="list-group list-group-flush">
                    <a href="@Url.Action("Index", "Marketplace")" class="list-group-item list-group-item-action @(string.IsNullOrEmpty(Model.CategoryFilter) ? "active" : "")">
                        All Categories
                    </a>
                    @foreach (var category in ViewBag.Categories)
                    {
                        <a href="@Url.Action("Index", "Marketplace", new { category = category.CategoryName, search = Model.SearchQuery })"
                           class="list-group-item list-group-item-action @(Model.CategoryFilter == category.CategoryName ? "active" : "")">
                            @category.CategoryName
                        </a>
                    }
                </div>
            </div>
        </div>
        
        <!-- Main Content -->
        <div class="col-lg-9">
            <div class="card shadow">
                <div class="card-body">
                    <!-- Search Bar -->
                    <form asp-action="Index" method="get" class="mb-4">
                        <div class="input-group">
                            <input type="text" name="search" class="form-control" placeholder="Search products..." value="@Model.SearchQuery">
                            @if (!string.IsNullOrEmpty(Model.CategoryFilter))
                            {
                                <input type="hidden" name="category" value="@Model.CategoryFilter" />
                            }
                            <button class="btn btn-primary" type="submit">
                                <i class="fas fa-search"></i>
                            </button>
                        </div>
                    </form>
                    
                    <!-- Featured Products -->
                    @* @if (Model.FeaturedProducts.Any() && string.IsNullOrEmpty(Model.SearchQuery) && Model.CurrentPage == 1) *@
                    @* { *@
                    @*     <div class="mb-4"> *@
                    @*         <h5 class="border-bottom pb-2 mb-3"> *@
                    @*             <i class="fas fa-star text-warning me-2"></i>Featured Products *@
                    @*         </h5> *@
                    @*         <div class="row"> *@
                    @*             @foreach (var product in Model.FeaturedProducts) *@
                    @*             { *@
                    @*                 <div class="col-md-6 col-lg-3 mb-4"> *@
                    @*                     <div class="card h-100 product-card"> *@
                    @*                         <div class="badge bg-warning text-dark position-absolute" style="top: 0.5rem; right: 0.5rem">Featured</div> *@
                    @*                         <img src="@product.MainImageUrl" class="card-img-top" alt="@product.CategoryName" style="height: 180px; object-fit: cover;"> *@
                    @*                         <div class="card-body d-flex flex-column"> *@
                    @*                             <h6 class="card-title text-truncate">@product.Name</h6> *@
                    @*                             <p class="card-text text-muted small mb-2"> *@
                    @*                                 <i class="fas fa-tags me-1"></i> @product.CategoryName *@
                    @*                                 <br/> *@
                    @*                                 <a href="@Url.RouteUrl("ViewBusinessProfile", new { id = product.BusinessOwnerId, category = product.CategoryName })"> *@
                    @*                                     <i class="fas fa-store me-1"></i> Sold by: @product.BusinessName Store *@
                    @*                                 </a> *@
                    @*                             </p> *@
                    @*                             <p class="card-text text-truncate small">@product.Description</p> *@
                    @*                             <div class="mt-auto d-flex justify-content-between align-items-center"> *@
                    @*                                 <span class="fw-bold text-primary">@product.Price.ToString("C")</span> *@
                    @*                                 <a asp-action="Details" asp-route-id="@product.Id" class="btn btn-sm btn-outline-primary"> *@
                    @*                                     View Details *@
                    @*                                 </a> *@
                    @*                             </div> *@
                    @*                         </div> *@
                    @*                     </div> *@
                    @*                 </div> *@
                    @*             } *@
                    @*         </div> *@
                    @*     </div> *@
                    @* } *@
                    
                    <!-- Main Products List -->
                    @if (Model.Products.Any())
                    {
                        <h5 class="border-bottom pb-2 mb-3">
                            @if (!string.IsNullOrEmpty(Model.CategoryFilter))
                            {
                                <span>@Model.CategoryFilter</span>
                            }
                            else if (!string.IsNullOrEmpty(Model.SearchQuery))
                            {
                                <span>Search Results for "@Model.SearchQuery"</span>
                            }
                            else
                            {
                                <span>All Products</span>
                            }
                        </h5>
                        
                        <div class="row">
                            @foreach (var product in Model.Products)
                            {
                                <div class="col-md-4 mb-4">
                                    <div class="card h-100 shadow-sm">
                                        <img src="@product.MainImageUrl" class="card-img-top" alt="@product.Name" style="height: 200px; object-fit: cover;">
                                        <div class="card-body">
                                            <h5 class="card-title">@product.Name</h5>
                                            <p class="card-text text-muted small">
                                                <i class="fas fa-tags me-1"></i> @product.CategoryName
                                                <br/>
                                                <i class="fas fa-store me-1"></i> 
                                                Sold by: 
                                                <strong>
                                                    <a href="@Url.RouteUrl("ViewBusinessProfile", new { id = product.BusinessOwnerId, category = product.CategoryName })">
                                                        @product.BusinessName
                                                    </a>
                                                </strong>
                                            </p>
                                            <p class="card-text">@Html.Raw(product.Description.Length > 100 ? product.Description.Substring(0, 100) + "..." : product.Description)</p>
                                        </div>
                                        <div class="card-footer d-flex justify-content-between align-items-center">
                                            <span class="fw-bold text-primary">@Html.DisplayFor(m => product.Price)</span>
                                            <a href="@Url.Action("Details", "Marketplace", new { id = product.Id })" class="btn btn-primary">
                                                <i class="fas fa-info-circle me-1"></i> Details
                                            </a>
                                        </div>
                                    </div>
                                </div>
                            }
                        </div>
                        
                        <!-- Pagination -->
                        @if (Model.TotalPages > 1)
                        {
                            <div class="d-flex justify-content-center mt-4">
                                <nav aria-label="Product pagination">
                                    <ul class="pagination">
                                        <li class="page-item @(Model.CurrentPage == 1 ? "disabled" : "")">
                                            <a class="page-link" href="@Url.Action("Index", "Marketplace", new { category = Model.CategoryFilter, search = Model.SearchQuery, page = Model.CurrentPage - 1 })">
                                                Previous
                                            </a>
                                        </li>
                                        
                                        @for (int i = 1; i <= Model.TotalPages; i++)
                                        {
                                            <li class="page-item @(Model.CurrentPage == i ? "active" : "")">
                                                <a class="page-link" href="@Url.Action("Index", "Marketplace", new { category = Model.CategoryFilter, search = Model.SearchQuery, page = i })">
                                                    @i
                                                </a>
                                            </li>
                                        }
                                        
                                        <li class="page-item @(Model.CurrentPage == Model.TotalPages ? "disabled" : "")">
                                            <a class="page-link" href="@Url.Action("Index", "Marketplace", new { category = Model.CategoryFilter, search = Model.SearchQuery, page = Model.CurrentPage + 1 })">
                                                Next
                                            </a>
                                        </li>
                                    </ul>
                                </nav>
                            </div>
                        }
                    }
                    else
                    {
                        <div class="alert alert-info">
                            <i class="fas fa-info-circle me-2"></i>
                            No products found. Please try a different search or category.
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
</div> 