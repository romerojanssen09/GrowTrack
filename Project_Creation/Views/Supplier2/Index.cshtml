@model IEnumerable<Project_Creation.DTO.Supplier2Dto>

@{
    ViewData["Title"] = "Supplier Management";
}

<div class="container-fluid">
    <div class="d-flex justify-content-between align-items-center mb-4">
        <h1 class="display-6">Supplier Management</h1>
        <button class="btn btn-primary" id="createBtn">
            <i class="bi bi-plus-circle"></i> Create New
        </button>
    </div>

    <div class="card shadow-sm">
        <div class="card-header bg-primary text-white">
            <h5 class="mb-0">Supplier List</h5>
        </div>
        <div class="card-body">
            <div class="table-responsive">
                <table class="table table-hover table-striped">
                    <thead class="table-light">
                        <tr>
                            <th>Supplier Name</th>
                            <th>Contact Person</th>
                            <th>Contact Details</th>
                            <th>Address</th>
                            <th class="text-end">Actions</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var item in Model)
                        {
                            <tr>
                                <td class="fw-semibold">@item.SupplierName</td>
                                <td>@item.ContactPerson</td>
                                <td>
                                    @if (!string.IsNullOrEmpty(item.Phone))
                                    {
                                        <span class="d-block"><i class="bi bi-telephone me-2"></i>@item.Phone</span>
                                    }
                                    @if (!string.IsNullOrEmpty(item.Email))
                                    {
                                        <span class="d-block"><i class="bi bi-envelope me-2"></i>@item.Email</span>
                                    }
                                </td>
                                <td>@item.Address</td>
                                <td class="text-end">
                                    <div class="btn-group" role="group">
                                        <button class="btn btn-sm btn-outline-warning edit-btn" data-id="@item.SupplierID">
                                            <i class="bi bi-pencil"></i> Edit
                                        </button>
                                        <button class="btn btn-sm btn-outline-danger delete-btn" data-id="@item.SupplierID">
                                            <i class="bi bi-trash"></i> Delete
                                        </button>
                                    </div>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>

<!-- Single Dynamic Modal -->
<div class="modal fade" id="supplierModal" tabindex="-1" aria-labelledby="supplierModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <form id="supplierForm" method="post">
                @Html.AntiForgeryToken()
                <input type="hidden" id="SupplierID" name="SupplierID" value="0" />
                <div class="modal-header bg-primary text-white">
                    <h5 class="modal-title" id="modalTitle">Supplier</h5>
                    <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <div class="row g-3">
                        <div class="col-md-6">
                            <div class="form-floating">
                                <input type="text" class="form-control" id="SupplierName" name="SupplierName" placeholder="Supplier Name" required />
                                <label for="SupplierName">Supplier Name</label>
                                <span class="text-danger" id="SupplierNameValidation"></span>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="form-floating">
                                <input type="text" class="form-control" id="ContactPerson" name="ContactPerson" placeholder="Contact Person" required />
                                <label for="ContactPerson">Contact Person</label>
                                <span class="text-danger" id="ContactPersonValidation"></span>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="form-floating">
                                <input type="email" class="form-control" id="Email" name="Email" placeholder="Email" />
                                <label for="Email">Email</label>
                                <span class="text-danger" id="EmailValidation"></span>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="form-floating">
                                <input type="tel" class="form-control" id="Phone" name="Phone" placeholder="Phone" />
                                <label for="Phone">Phone</label>
                                <span class="text-danger" id="PhoneValidation"></span>
                            </div>
                        </div>
                        <div class="col-12">
                            <div class="form-floating">
                                <input type="text" class="form-control" id="Address" name="Address" placeholder="Address" />
                                <label for="Address">Address</label>
                                <span class="text-danger" id="AddressValidation"></span>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">
                        <i class="bi bi-x-circle"></i> Close
                    </button>
                    <button type="submit" class="btn btn-primary">
                        <i class="bi bi-save"></i> Save
                    </button>
                </div>
            </form>
        </div>
    </div>
</div>

<!-- Delete Confirmation Modal -->
<div class="modal fade" id="deleteModal" tabindex="-1" aria-labelledby="deleteModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header bg-danger text-white">
                <h5 class="modal-title">Delete Supplier</h5>
                <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <div class="d-flex align-items-center">
                    <div class="me-3">
                        <i class="bi bi-exclamation-triangle text-danger fs-1"></i>
                    </div>
                    <div>
                        <h6>Are you sure you want to delete this supplier?</h6>
                        <p class="mb-0 text-muted">This action cannot be undone.</p>
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-outline-secondary" data-bs-dismiss="modal">
                    <i class="bi bi-x-lg"></i> Cancel
                </button>
                <button type="button" class="btn btn-danger" id="confirmDelete">
                    <i class="bi bi-trash"></i> Delete
                </button>
            </div>
        </div>
    </div>
</div>

@section Styles {
    <style>
        .table-hover tbody tr:hover {
            background-color: rgba(13, 110, 253, 0.1);
        }

        .form-floating label {
            padding: 1rem 0.75rem;
        }

        .card {
            border-radius: 0.5rem;
            overflow: hidden;
        }

        .card-header {
            border-bottom: none;
        }
    </style>
}

@section Scripts {
    <!-- Add Bootstrap Icons -->
    @* <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.0/font/bootstrap-icons.css"> *@

    <script>
        $(document).ready(function() {
            var currentId = 0;

            // Create button click
            $('#createBtn').click(function() {
                $('#modalTitle').text('Create New Supplier');
                $('#SupplierID').val(0);
                $('#supplierForm')[0].reset();
                $('#supplierModal').modal('show');
            });

            // Edit button click
            $('.edit-btn').click(function() {
                var id = $(this).data('id');
                currentId = id;
                $('#modalTitle').text('Edit Supplier');

                $.get('/Supplier2/GetSupplier/' + id)
                    .done(function(data) {
                        $('#SupplierID').val(data.supplierID);
                        $('#SupplierName').val(data.supplierName);
                        $('#ContactPerson').val(data.contactPerson);
                        $('#Email').val(data.email);
                        $('#Phone').val(data.phone);
                        $('#Address').val(data.address);
                        $('#supplierModal').modal('show');
                    })
                    .fail(function(jqXHR, textStatus, errorThrown) {
                        console.error("Error loading supplier:", textStatus, errorThrown);
                        alert('Error loading supplier data: ' + textStatus);
                    });
            });

            // Form submission
            $('#supplierForm').submit(function(e) {
                e.preventDefault();

                var url = $('#SupplierID').val() == 0 ? '/Supplier2/Create' : '/Supplier2/Edit/' + $('#SupplierID').val();
                var method = $('#SupplierID').val() == 0 ? 'POST' : 'POST';

                if (!$('#SupplierName').val() || !$('#ContactPerson').val()) {
                    alert('Supplier Name and Contact Person are required');
                    return;
                }

                // Create form data object including anti-forgery token
                var formData = {
                    SupplierID: $('#SupplierID').val(),
                    SupplierName: $('#SupplierName').val(),
                    ContactPerson: $('#ContactPerson').val(),
                    Email: $('#Email').val(),
                    Phone: $('#Phone').val(),
                    Address: $('#Address').val(),
                    __RequestVerificationToken: $('input[name="__RequestVerificationToken"]').val()
                };

                $.ajax({
                    url: url,
                    method: method,
                    data: formData,
                    success: function(response) {
                        if (response.success) {
                            location.reload();
                        } else {
                            displayErrors(response.errors);
                        }
                    },
                    error: function(xhr, status, error) {
                        console.error(xhr.responseText);
                        alert('An error occurred: ' + error);
                    }
                });
            });

            // Delete button click
            $('.delete-btn').click(function() {
                currentId = $(this).data('id');
                $('#deleteModal').modal('show');
            });

            // Confirm delete
            $('#confirmDelete').click(function() {
                $.post('/Supplier2/Delete/' + currentId, function(response) {
                    if (response.success) {
                        location.reload();
                    } else {
                        alert('Error deleting supplier');
                    }
                });
            });

            function displayErrors(errors) {
                // Clear previous errors
                $('.text-danger').text('');

                // Display new errors
                if (errors) {
                    for (var key in errors) {
                        var errorMessage = errors[key];
                        if (Array.isArray(errorMessage)) {
                            errorMessage = errorMessage.join(', ');
                        }
                        $('#' + key + 'Validation').text(errorMessage);
                    }
                }
            }
        });
    </script>
}