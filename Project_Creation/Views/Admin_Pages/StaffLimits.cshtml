@model List<Project_Creation.DTO.BusinessOwnerViewModel>
@{
    ViewData["Title"] = "Staff Account Limits";
}

<div class="container mt-4">
    <div class="card shadow-sm mb-4">
        <div class="card-header bg-primary text-white d-flex justify-content-between align-items-center">
            <h5 class="mb-0"><i class="bi bi-people-fill me-2"></i>Business Owner Staff Account Limits</h5>
            <div class="d-flex gap-2">
                <input type="search" class="form-control form-control-sm search-input" placeholder="Search business owners..." id="searchBusinessOwners">
                <button class="btn btn-sm btn-light" title="Help" id="helpButton"><i class="bi bi-question-circle"></i></button>
            </div>
        </div>
        <div class="card-body p-0">
            <div class="table-responsive">
                <table class="table table-hover align-middle mb-0" id="staffLimitsTable">
                    <thead class="table-light">
                        <tr>
                            <th class="sort" data-sort="business">Business Name <i class="bi bi-arrow-down-up"></i></th>
                            <th class="sort" data-sort="owner">Owner <i class="bi bi-arrow-down-up"></i></th>
                            <th class="sort" data-sort="email">Email <i class="bi bi-arrow-down-up"></i></th>
                            <th class="sort" data-sort="current">Current Staff <i class="bi bi-arrow-down-up"></i></th>
                            <th class="sort" data-sort="limit">Staff Limit <i class="bi bi-arrow-down-up"></i></th>
                            <th>Actions</th>
                        </tr>
                    </thead>
                    <tbody>
                        @if (Model != null && Model.Any())
                        {
                            foreach (var owner in Model)
                            {
                                <tr data-id="@owner.Id" class="@(ViewBag.HighlightUserId != null && ViewBag.HighlightUserId == owner.Id ? "table-primary" : "")">
                                    <td class="business">@owner.BusinessName</td>
                                    <td class="owner">@owner.OwnerName</td>
                                    <td class="email">@owner.Email</td>
                                    <td class="current text-center">
                                        <span class="badge bg-info">@owner.CurrentStaffCount</span>
                                    </td>
                                    <td class="limit text-center">
                                        <span class="badge @(owner.StaffLimit > 0 ? "bg-success" : "bg-warning")">@owner.StaffLimit</span>
                                    </td>
                                    <td>
                                        <button class="btn btn-sm btn-outline-primary btn-edit-limit"
                                                data-id="@owner.Id"
                                                data-business="@owner.BusinessName"
                                                data-owner="@owner.OwnerName"
                                                data-limit="@owner.StaffLimit"
                                                data-current="@owner.CurrentStaffCount">
                                            <i class="bi bi-pencil-square"></i> Edit Limit
                                        </button>
                                    </td>
                                </tr>
                            }
                        }
                        else
                        {
                            <tr>
                                <td colspan="6" class="text-center py-4 text-muted">No business owners found</td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>

    <div class="card shadow-sm">
        <div class="card-header bg-info text-white">
            <h5 class="mb-0"><i class="bi bi-info-circle me-2"></i>About Staff Account Limits</h5>
        </div>
        <div class="card-body">
            <p>This page allows you to manage how many staff accounts each business owner can create in the system.</p>
            <ul>
                <li><strong>Current Staff:</strong> The number of staff accounts the business owner has already created</li>
                <li><strong>Staff Limit:</strong> The maximum number of staff accounts allowed for this business owner</li>
            </ul>
            <div class="alert alert-warning">
                <i class="bi bi-exclamation-triangle me-2"></i>
                <strong>Note:</strong> Setting a limit to 0 means the business owner cannot create any staff accounts.
            </div>
        </div>
    </div>
</div>

<!-- Edit Staff Limit Modal -->
<div class="modal fade" id="editLimitModal" tabindex="-1" aria-labelledby="editLimitModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header bg-primary text-white">
                <h5 class="modal-title" id="editLimitModalLabel"><i class="bi bi-people-fill me-2"></i>Edit Staff Account Limit</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form id="editLimitForm">
                    <input type="hidden" id="userId" name="userId">

                    <div class="mb-3">
                        <label for="businessNameDisplay" class="form-label">Business</label>
                        <input type="text" class="form-control" id="businessNameDisplay" readonly>
                    </div>

                    <div class="mb-3">
                        <label for="ownerNameDisplay" class="form-label">Owner</label>
                        <input type="text" class="form-control" id="ownerNameDisplay" readonly>
                    </div>

                    <div class="mb-3">
                        <label for="currentStaffDisplay" class="form-label">Current Staff Count</label>
                        <input type="text" class="form-control" id="currentStaffDisplay" readonly>
                    </div>

                    <div class="mb-3">
                        <label for="staffLimit" class="form-label">Staff Account Limit</label>
                        <input type="number" class="form-control" id="staffLimit" name="staffLimit" min="0" required>
                        <div class="form-text">Set to 0 to disable staff account creation for this business owner.</div>
                    </div>

                    <div class="alert alert-warning" id="limitWarning" style="display: none;">
                        <i class="bi bi-exclamation-triangle me-2"></i>
                        <span id="warningText"></span>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                <button type="button" class="btn btn-primary" id="saveLimit">Save Changes</button>
            </div>
        </div>
    </div>
</div>

<!-- Loading overlay -->
<div class="loading-overlay" style="display: none;">
    <div class="loading-spinner">
        <div class="spinner-border text-light" role="status">
            <span class="visually-hidden">Loading...</span>
        </div>
        <div class="mt-2 text-light">Processing...</div>
    </div>
</div>

@section Scripts {
    <script>
        $(document).ready(function() {
            // Helper functions for loading overlay
            function showLoading() {
                $('.loading-overlay').show();
            }

            function hideLoading() {
                $('.loading-overlay').hide();
            }

            // Search functionality
            $('#searchBusinessOwners').on('keyup', function() {
                var value = $(this).val().toLowerCase();
                $('#staffLimitsTable tbody tr').filter(function() {
                    $(this).toggle($(this).text().toLowerCase().indexOf(value) > -1)
                });
            });

            // Sort functionality
            $('.sort').click(function() {
                const table = $(this).closest('table');
                const index = $(this).index();
                const rows = table.find('tbody > tr').get();
                const isAsc = $(this).hasClass('asc');

                // Remove all sort classes
                table.find('.sort').removeClass('asc desc');

                // Sort rows
                rows.sort(function(a, b) {
                    const aVal = $(a).find('td').eq(index).text().toLowerCase();
                    const bVal = $(b).find('td').eq(index).text().toLowerCase();
                    return isAsc ? aVal.localeCompare(bVal) : bVal.localeCompare(aVal);
                });

                // Re-add rows in new order
                $.each(rows, function(index, row) {
                    table.find('tbody').append(row);
                });

                // Add appropriate class to header
                $(this).addClass(isAsc ? 'desc' : 'asc');
            });

            // Help button
            $('#helpButton').click(function() {
                Swal.fire({
                    title: 'Staff Account Limits',
                    icon: 'info',
                    html: `
                        <div class="text-start">
                            <p>This page allows you to manage the number of staff accounts each business owner can create:</p>
                            <ul>
                                <li><strong>Current Staff:</strong> The number of staff accounts currently in use</li>
                                <li><strong>Staff Limit:</strong> The maximum number of staff accounts allowed</li>
                                <li>Setting a limit to 0 disables staff account creation</li>
                                <li>A business owner cannot create more staff accounts than their limit</li>
                            </ul>
                        </div>
                    `,
                    confirmButtonText: 'Got it!'
                });
            });

            // Edit limit button
            $('.btn-edit-limit').click(function() {
                const userId = $(this).data('id');
                const business = $(this).data('business');
                const owner = $(this).data('owner');
                const currentLimit = $(this).data('limit');
                const currentStaff = $(this).data('current');

                $('#userId').val(userId);
                $('#businessNameDisplay').val(business);
                $('#ownerNameDisplay').val(owner);
                $('#currentStaffDisplay').val(currentStaff);
                $('#staffLimit').val(currentLimit);

                // Check if new limit is less than current staff count
                checkLimitWarning(currentStaff, currentLimit);

                $('#editLimitModal').modal('show');
            });

            // Staff limit input validation
            $('#staffLimit').on('input', function() {
                const currentStaff = parseInt($('#currentStaffDisplay').val());
                const newLimit = parseInt($(this).val());

                checkLimitWarning(currentStaff, newLimit);
            });

            function checkLimitWarning(currentStaff, newLimit) {
                if (newLimit < currentStaff) {
                    $('#warningText').text(`Warning: This business owner already has ${currentStaff} staff accounts, which exceeds the new limit of ${newLimit}.`);
                    $('#limitWarning').show();
                } else {
                    $('#limitWarning').hide();
                }
            }

            // Save limit changes
            $('#saveLimit').click(function() {
                const userId = $('#userId').val();
                const staffLimit = $('#staffLimit').val();

                if (!staffLimit || staffLimit < 0) {
                    Swal.fire({
                        icon: 'error',
                        title: 'Invalid Limit',
                        text: 'Please enter a valid staff limit (0 or greater)'
                    });
                    return;
                }

                showLoading();

                $.ajax({
                    url: '@Url.Action("UpdateStaffLimit", "Admin")',
                    type: 'POST',
                    headers: {
                        'RequestVerificationToken': $('input[name="__RequestVerificationToken"]').val()
                    },
                    data: {
                        userId: userId,
                        staffLimit: staffLimit
                    },
                    success: function(response) {
                        hideLoading();
                        if (response.success) {
                            $('#editLimitModal').modal('hide');

                            // Update the table row with new limit
                            const row = $(`#staffLimitsTable tbody tr[data-id="${userId}"]`);
                            const badgeClass = staffLimit > 0 ? "bg-success" : "bg-warning";
                            row.find('td.limit span').removeClass().addClass(`badge ${badgeClass}`).text(staffLimit);

                            // Update the data attribute on the edit button
                            row.find('.btn-edit-limit').data('limit', staffLimit);

                            Swal.fire({
                                icon: 'success',
                                title: 'Limit Updated',
                                text: 'Staff account limit has been updated successfully',
                                timer: 1500,
                                showConfirmButton: false
                            });
                        } else {
                            Swal.fire({
                                icon: 'error',
                                title: 'Error',
                                text: response.message || 'Failed to update staff limit'
                            });
                        }
                    },
                    error: function(xhr) {
                        hideLoading();
                        Swal.fire({
                            icon: 'error',
                            title: 'Error',
                            text: 'An error occurred while updating the staff limit'
                        });
                    }
                });
            });
        });
    </script>
}

<style>
    .loading-overlay {
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background: rgba(0, 0, 0, 0.5);
        display: flex;
        justify-content: center;
        align-items: center;
        z-index: 9999;
    }

    .card {
        border: none;
        border-radius: 0.5rem;
        overflow: hidden;
    }

    .table th {
        position: relative;
        cursor: pointer;
    }

        .table th.sort::after {
            content: "";
            display: inline-block;
            margin-left: 0.25rem;
        }

        .table th.sort.asc::after {
            content: "↑";
        }

        .table th.sort.desc::after {
            content: "↓";
        }

    .badge {
        font-size: 0.85rem;
        padding: 0.35em 0.65em;
    }
</style> 