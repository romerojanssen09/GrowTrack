@using Microsoft.AspNetCore.Html
@model Project_Creation.DTO.UserDetailsViewModel

<div class="container-fluid">
    <div class="row mb-3">
        <div class="col-12 text-center">
            <span class="badge bg-primary fs-5 p-2 mb-2"><i class="bi bi-person-circle"></i> User Profile</span>
        </div>
    </div>
    <!-- Step badges for visual workflow -->
    <div class="row mb-3">
        <div class="col-12 text-center">
            <span class="badge bg-secondary mx-1">Step 1: Accept & Send Link</span>
            <span class="badge bg-info mx-1">Step 2: Confirm & Allow Marketplace</span>
            <span class="badge bg-success mx-1">Step 3: Status Overview</span>
        </div>
    </div>
    <div class="row mb-3">
        <div class="col-lg-5 col-md-12 mb-3">
            <div class="card shadow-sm h-100">
                <div class="card-header bg-light fw-bold"><i class="bi bi-person"></i> Personal Information</div>
                <div class="card-body">
                    <dl class="row mb-0">
                        <dt class="col-sm-5">Full Name:</dt>
                        <dd class="col-sm-7">@Model.User.FirstName @Model.User.LastName</dd>
                        <dt class="col-sm-5">Email:</dt>
                        <dd class="col-sm-7">@Model.User.Email</dd>
                        <dt class="col-sm-5">Phone:</dt>
                        <dd class="col-sm-7">@Model.User.PhoneNumber</dd>
                        <dt class="col-sm-5">Registered Date:</dt>
                        <dd class="col-sm-7">@Model.User.RegistrationDate.ToString("MMMM dd, yyyy")</dd>
                    </dl>
                </div>
            </div>
        </div>
        <div class="col-lg-7 col-md-12 mb-3">
            <div class="card shadow-sm h-100">
                <div class="card-header bg-light fw-bold"><i class="bi bi-building"></i> Business Information</div>
                <div class="card-body">
                    <dl class="row mb-0">
                        <dt class="col-sm-5">Business Name:</dt>
                        <dd class="col-sm-7">@Model.User.BusinessName</dd>
                        <dt class="col-sm-5">DTI Registration:</dt>
                        <dd class="col-sm-7">
                            <div class="d-flex flex-wrap align-items-center gap-2">
                                <span>@Model.User.DTIReqistrationNumber</span>
                                <button type="button" class="btn btn-sm btn-outline-info" data-bs-toggle="popover" data-bs-placement="auto" 
                                        title="DTI Registration Number Format" 
                                        data-bs-content="Valid DTI Registration Numbers follow these formats:
                                            - Certificate No. (CBNR): 7-digit number (e.g., 1234567)
                                            - Reference Code: Format - BNRS-MMDDYY-XXXXXX where X is alphanumeric
                                            - Business Name Registration System (BNRS) Number: Alphanumeric code
                                            Verify authenticity at https://bnrs.dti.gov.ph/search">
                                    <i class="bi bi-info-circle"></i>
                                </button>
                                <a href="https://bnrs.dti.gov.ph/search" target="_blank" class="btn btn-sm btn-outline-info">
                                    <i class="bi bi-info-circle"></i> Verify DTI Registration
                                </a>
                            </div>
                        </dd>
                        <dt class="col-sm-5">Business Address:</dt>
                        <dd class="col-sm-7">@Model.User.BusinessAddress</dd>
                        <dt class="col-sm-5">Years in Operation:</dt>
                        <dd class="col-sm-7">@Model.User.NumberOfBusinessYearsOperation</dd>
                        <dt class="col-sm-5">Scope of Business:</dt>
                        <dd class="col-sm-7">@Model.User.CategoryOfBusiness</dd>
                        <dt class="col-sm-5">Business Permit:</dt>
                        <dd class="col-sm-7">
                            @if (!string.IsNullOrEmpty(Model.User.BusinessPermitPath))
                            {
                                var ext = System.IO.Path.GetExtension(Model.User.BusinessPermitPath).ToLower();
                                if (ext == ".pdf")
                                {
                                    <div class="pdf-container" style="max-width:100%; overflow:auto;">
                                        <embed src="@Model.User.BusinessPermitPath" type="application/pdf" width="100%" height="400px" class="border rounded" />
                                    </div>
                                    <div class="mt-2">
                                        <a href="@Model.User.BusinessPermitPath" target="_blank" class="btn btn-outline-primary btn-sm">
                                            <i class="bi bi-file-earmark-pdf"></i> View Full PDF
                                        </a>
                                    </div>
                                }
                                else if (ext == ".jpg" || ext == ".jpeg" || ext == ".png" || ext == ".gif")
                                {
                                    <div class="responsive-img-container">
                                        <img src="@Model.User.BusinessPermitPath" class="img-fluid img-thumbnail border doc-preview" data-src="@Model.User.BusinessPermitPath" data-title="Business Permit" />
                                    </div>
                                }
                                else
                                {
                                    <a href="@Model.User.BusinessPermitPath" target="_blank" class="btn btn-outline-primary btn-sm"><i class="bi bi-file-earmark"></i> View File</a>
                                }
                            }
                            else
                            {
                                <span class="text-muted">No file</span>
                            }
                        </dd>
                        <dt class="col-sm-5">Logo:</dt>
                        <dd class="col-sm-7">
                            @if (!string.IsNullOrEmpty(Model.User.LogoPath))
                            {
                                <div class="responsive-img-container">
                                    <img src="@Model.User.LogoPath" class="img-fluid img-thumbnail border doc-preview" style="max-height:200px;" data-src="@Model.User.LogoPath" data-title="Business Logo" />
                                </div>
                            }
                            else
                            {
                                <span class="text-muted">No logo</span>
                            }
                        </dd>
                    <dt class="col-sm-5">Status:</dt>
                    <dd class="col-sm-7">
                        <span class="badge @(Model.User.IsVerified ? "bg-success" : "bg-warning") text-white me-1">
                            @(Model.User.IsVerified ? "Verified" : "Unverified")
                        </span>
                        <span class="badge
                            @(Model.User.MarkerPlaceStatus.ToString() == "Approved" ? "bg-success" :
                              (Model.User.MarkerPlaceStatus.ToString() == "Requesting" ? "bg-warning" :
                              (Model.User.MarkerPlaceStatus.ToString() == "Pending" ? "bg-secondary" : "bg-danger")))
                            text-white">
                            @if (Model.User.MarkerPlaceStatus.ToString() == "Approved")
                            {
                                @:Marketplace Allowed
                            }
                            else if (Model.User.MarkerPlaceStatus.ToString() == "Requesting")
                            {
                                @:Marketplace Requesting
                            }
                            else if (Model.User.MarkerPlaceStatus.ToString() == "Pending")
                            {
                                @:Marketplace Pending
                            }
                            else
                            {
                                @:Marketplace Not Allowed
                            }
                        </span>

                    </dd>
                    <!-- Navigation shortcuts -->
                    <!-- <dt class="col-sm-12 mt-3">
                        <div class="d-flex justify-content-center">
                            <div class="btn-group">
                                <a href="@Url.Action("BusinessOwners", "Admin")" class="btn btn-primary">
                                    <i class="bi bi-people me-1"></i> All Business Owners
                                </a>
                                <a href="@Url.Action("MarketplaceApproval", "Admin")" class="btn btn-info">
                                    <i class="bi bi-shop me-1"></i> Marketplace Approvals
                                </a>
                                <a href="@Url.Action("BOApproval", "Admin")" class="btn btn-secondary">
                                    <i class="bi bi-check-circle me-1"></i> BO Approvals
                                </a>
                            </div>
                        </div>
                    </dt> -->
                </dl>
            </div>
        </div>
    </div>
    <div class="row mb-3">
        <div class="col-12">
            <div class="card shadow-sm">
                <div class="card-header bg-light fw-bold"><i class="bi bi-info-circle"></i> Company Background</div>
                <div class="card-body">
                    @Model.User.CompanyBackground
                </div>
            </div>
        </div>
    </div>
    @if (Model.AdditionInfo != null)
    {
        <div class="row mb-3">
            <div class="col-12 text-center">
                <span class="badge bg-info fs-5 p-2 mb-2"><i class="bi bi-file-earmark-check"></i> Second Registration Information</span>
            </div>
        </div>
        <div class="row">
            <div class="col-lg-6 col-md-12 mb-3">
                <div class="card shadow-sm h-100">
                    <div class="card-header bg-light fw-bold"><i class="bi bi-file-earmark-medical"></i> Business Documents</div>
                    <div class="card-body">
                        <dl class="row mb-0">
                            <dt class="col-lg-6 col-md-5 col-sm-6">Barangay Clearance:</dt>
                            <dd class="col-lg-6 col-md-7 col-sm-6">@DisplayFile(Model.AdditionInfo.BrgyClearancePath, "Barangay Clearance")</dd>
                            
                            <dt class="col-lg-6 col-md-5 col-sm-6">SEC Certificate:</dt>
                            <dd class="col-lg-6 col-md-7 col-sm-6">@DisplayFile(Model.AdditionInfo.SecCertPath, "SEC Certificate")</dd>
                            
                            <dt class="col-lg-6 col-md-5 col-sm-6">DTI Certificate:</dt>
                            <dd class="col-lg-6 col-md-7 col-sm-6">@DisplayFile(Model.AdditionInfo.DtiCertPath, "DTI Certificate")</dd>
                            
                            <dt class="col-lg-6 col-md-5 col-sm-6">Business Owner Valid ID:</dt>
                            <dd class="col-lg-6 col-md-7 col-sm-6">@DisplayFile(Model.AdditionInfo.BusinessOwnerValidId, "Business Owner ID")</dd>
                        </dl>
                    </div>
                </div>
            </div>
            <div class="col-lg-6 col-md-12 mb-3">
                <div class="card shadow-sm h-100">
                    <div class="card-header bg-light fw-bold"><i class="bi bi-journal-check"></i> Additional Info</div>
                    <div class="card-body">
                        <dl class="row mb-0">
                            <dt class="col-lg-6 col-md-5 col-sm-6">Operation to Operate:</dt>
                            <dd class="col-lg-6 col-md-7 col-sm-6">@DisplayFile(Model.AdditionInfo.OperationToOperate, "Operation to Operate")</dd>
                            
                            <dt class="col-lg-6 col-md-5 col-sm-6">Submitted On:</dt>
                            <dd class="col-lg-6 col-md-7 col-sm-6">@Model.AdditionInfo.SubmissionDate.ToString("MMMM dd, yyyy")</dd>
                        </dl>
                    </div>
                </div>
            </div>
        </div>
    }
</div>

<!-- Image Preview Modal -->
<div class="modal fade" id="imagePreviewModal" tabindex="-1" aria-labelledby="imagePreviewModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-fullscreen">
        <div class="modal-content">
            <div class="modal-header bg-dark text-white">
                <h5 class="modal-title" id="imagePreviewModalLabel">Document Preview</h5>
                <div class="ms-auto me-2 d-flex flex-wrap gap-2 justify-content-end">
                    <div class="btn-group btn-group-sm">
                        <button type="button" class="btn btn-outline-light zoom-in-btn">
                            <i class="bi bi-zoom-in"></i><span class="d-none d-md-inline"> Zoom In</span>
                        </button>
                        <button type="button" class="btn btn-outline-light zoom-out-btn">
                            <i class="bi bi-zoom-out"></i><span class="d-none d-md-inline"> Zoom Out</span>
                        </button>
                        <button type="button" class="btn btn-outline-light reset-zoom-btn">
                            <i class="bi bi-arrows-angle-contract"></i><span class="d-none d-md-inline"> Reset</span>
                        </button>
                    </div>
                </div>
                <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body text-center bg-dark p-0 position-relative">
                <div class="document-viewer d-flex justify-content-center align-items-center h-100">
                    <img id="modalImage" src="" class="img-fluid" style="max-height: 90vh; transition: transform 0.3s ease;" />
                </div>
            </div>
            <div class="modal-footer bg-dark text-white">
                <div class="text-muted small me-auto image-info">
                    <span id="imageDimensions"></span>
                </div>
                <div class="d-flex gap-2">
                    <a id="downloadBtn" href="" download class="btn btn-primary btn-sm">
                        <i class="bi bi-download"></i><span class="d-none d-md-inline"> Download</span>
                    </a>
                    <button type="button" class="btn btn-secondary btn-sm" data-bs-dismiss="modal">
                        <i class="bi bi-x-circle"></i><span class="d-none d-md-inline"> Close</span>
                    </button>
                </div>
            </div>
        </div>
    </div>
</div>

@functions {
    public IHtmlContent DisplayFile(string path, string title = "Document")
    {
        if (string.IsNullOrEmpty(path)) return new HtmlString("<span class='text-muted'>No file uploaded</span>");
        var ext = System.IO.Path.GetExtension(path).ToLower();
        if (ext == ".jpg" || ext == ".jpeg" || ext == ".png" || ext == ".gif")
        {
            return new HtmlString($@"
                <div class='position-relative responsive-img-container'>
                    <img src='{path}' class='img-fluid img-thumbnail border doc-preview' data-src='{path}' data-title='{title}' />
                    <button type='button' class='btn btn-sm btn-primary position-absolute top-0 end-0 m-2 view-full-btn' data-src='{path}' data-title='{title}'>
                        <i class='bi bi-arrows-fullscreen'></i>
                    </button>
                </div>");
        }
        else if (ext == ".pdf")
        {
            return new HtmlString($@"
                <div class='mb-2 pdf-container' style='max-width:100%; overflow:auto;'>
                    <embed src='{path}' type='application/pdf' width='100%' height='300px' class='border rounded' />
                    <div class='mt-2'>
                        <a href='{path}' target='_blank' class='btn btn-outline-primary btn-sm'>
                            <i class='bi bi-file-earmark-pdf'></i> View Full PDF
                        </a>
                    </div>
                </div>");
        }
        else
        {
            return new HtmlString($"<a href='{path}' target='_blank' class='btn btn-outline-primary btn-sm'><i class='bi bi-file-earmark'></i> View File</a>");
        }
    }
}

<style>
    .doc-preview {
        cursor: pointer;
        transition: transform 0.2s;
        max-width: 100%;
        height: auto;
    }
    
    .doc-preview:hover {
        transform: scale(1.03);
        box-shadow: 0 0 10px rgba(0,0,0,0.2);
    }
    
    .view-full-btn {
        opacity: 0.7;
        z-index: 5;
    }
    
    .view-full-btn:hover {
        opacity: 1;
    }
    
    .document-viewer {
        overflow: auto;
        background-color: #1e1e1e;
        height: calc(100vh - 130px);
        position: relative;
    }
    
    .document-viewer img {
        margin: auto;
        display: block;
        transform-origin: center;
        max-width: 100%;
        height: auto;
    }
    
    .responsive-img-container {
        width: 100%;
        overflow: hidden;
        margin-bottom: 15px;
    }
    
    .responsive-img-container img {
        max-width: 100%;
        height: auto;
        display: block;
    }
    
    .pdf-container embed {
        max-width: 100%;
    }
    
    /* Improve modal responsiveness */
    @@media (max-width: 768px) {
        .modal-fullscreen {
            padding: 0 !important;
        }
        
        .document-viewer {
            height: calc(100vh - 100px);
        }
        
        .zoom-in-btn, .zoom-out-btn, .reset-zoom-btn {
            padding: 0.2rem 0.4rem;
            font-size: 0.75rem;
        }
    }
</style>

<script>
    $(document).ready(function () {
        // Initialize popovers
        const popoverTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle="popover"]'));
        popoverTriggerList.map(function (popoverTriggerEl) {
            return new bootstrap.Popover(popoverTriggerEl, {
                html: true,
                trigger: 'focus'
            });
        });
        
        // Image preview modal
        let currentZoom = 1;
        let isDragging = false;
        let startX, startY, translateX = 0, translateY = 0;
        
        $('.doc-preview, .view-full-btn').click(function(e) {
            e.preventDefault();
            var src = $(this).data('src') || $(this).attr('src');
            var title = $(this).data('title') || 'Document Preview';
            
            $('#modalImage').attr('src', src);
            $('#imagePreviewModalLabel').text(title);
            $('#downloadBtn').attr('href', src);
            
            // Reset zoom level and position
            currentZoom = 1;
            translateX = 0;
            translateY = 0;
            $('#modalImage').css('transform', 'scale(1) translate(0px, 0px)');
            
            var imageModal = new bootstrap.Modal(document.getElementById('imagePreviewModal'));
            imageModal.show();
            
            // Get image dimensions once loaded
            $('#modalImage').on('load', function() {
                const width = this.naturalWidth;
                const height = this.naturalHeight;
                $('#imageDimensions').text(`Dimensions: ${width} × ${height} pixels`);
            });
        });
        
        // Enable image dragging when zoomed
        $('#modalImage').on('mousedown touchstart', function(e) {
            if (currentZoom > 1) {
                isDragging = true;
                startX = e.type === 'mousedown' ? e.clientX : e.originalEvent.touches[0].clientX;
                startY = e.type === 'mousedown' ? e.clientY : e.originalEvent.touches[0].clientY;
                e.preventDefault();
            }
        });
        
        $(document).on('mousemove touchmove', function(e) {
            if (!isDragging) return;
            
            const clientX = e.type === 'mousemove' ? e.clientX : e.originalEvent.touches[0].clientX;
            const clientY = e.type === 'mousemove' ? e.clientY : e.originalEvent.touches[0].clientY;
            
            const dx = clientX - startX;
            const dy = clientY - startY;
            
            translateX += dx;
            translateY += dy;
            
            $('#modalImage').css('transform', `scale(${currentZoom}) translate(${translateX/currentZoom}px, ${translateY/currentZoom}px)`);
            
            startX = clientX;
            startY = clientY;
        });
        
        $(document).on('mouseup touchend', function() {
            isDragging = false;
        });
        
        // Zoom in
        $('.zoom-in-btn').click(function() {
            currentZoom += 0.25;
            if (currentZoom > 5) currentZoom = 5; // Max zoom
            updateTransform();
        });
        
        // Zoom out
        $('.zoom-out-btn').click(function() {
            currentZoom -= 0.25;
            if (currentZoom < 0.25) currentZoom = 0.25; // Min zoom
            updateTransform();
        });
        
        // Reset zoom
        $('.reset-zoom-btn').click(function() {
            currentZoom = 1;
            translateX = 0;
            translateY = 0;
            updateTransform();
        });
        
        function updateTransform() {
            $('#modalImage').css('transform', `scale(${currentZoom}) translate(${translateX/currentZoom}px, ${translateY/currentZoom}px)`);
        }
        
        // Handle keyboard shortcuts
        $(document).on('keydown', function(e) {
            if ($('#imagePreviewModal').hasClass('show')) {
                switch(e.key) {
                    case '+':
                    case '=':
                        $('.zoom-in-btn').click();
                        break;
                    case '-':
                    case '_':
                        $('.zoom-out-btn').click();
                        break;
                    case '0':
                        $('.reset-zoom-btn').click();
                        break;
                    case 'Escape':
                        $('#imagePreviewModal').modal('hide');
                        break;
                }
            }
        });
        
        // Toggle verification status
        $('#btn-verify-toggle').click(function () {
            var userId = '@Model.User.Id';
            var isVerified = '@Model.User.IsVerified' === 'True' ? false : true;
            $.ajax({
                url: '/Admin/ChangeUserStatus',
                type: 'POST',
                headers: {
                    "RequestVerificationToken": $('input[name="__RequestVerificationToken"]').val(),
                    "Content-Type": "application/x-www-form-urlencoded"
                },
                data: {
                    id: userId,
                    isVerified: isVerified,
                    isAllowedToMarketPlace: '@Model.User.MarkerPlaceStatus'
                },
                success: function (response) {
                    if (response.success) {
                        location.reload();
                    } else {
                        alert(response.message || 'Failed to update status');
                    }
                },
                error: function () {
                    alert('An error occurred while updating status');
                }
            });
        });
        
        // Toggle marketplace status
        $('#btn-marketplace-toggle').click(function () {
            var userId = '@Model.User.Id';
            var isAllowed = '@Model.User.MarkerPlaceStatus' === 'True' ? false : true;
            $.ajax({
                url: '/Admin/ChangeUserStatus',
                type: 'POST',
                headers: {
                    "RequestVerificationToken": $('input[name="__RequestVerificationToken"]').val(),
                    "Content-Type": "application/x-www-form-urlencoded"
                },
                data: {
                    id: userId,
                    isVerified: '@Model.User.IsVerified',
                    isAllowedToMarketPlace: isAllowed
                },
                success: function (response) {
                    if (response.success) {
                        location.reload();
                    } else {
                        alert(response.message || 'Failed to update status');
                    }
                },
                error: function () {
                    alert('An error occurred while updating status');
                }
            });
        });
    });
</script>