@model List<Project_Creation.Models.Entities.Users>
@{
    ViewData["Title"] = "Business Owners";
}

<div class="container-fluid">
    <!-- Header Row -->
    <div class="d-flex flex-column flex-sm-row gap-3 justify-content-between align-items-center mb-4">
        <div>
            <h1 class="h3 mb-0 text-gray-800 text-center text-sm-start">Business Owners</h1>
            <p class="mb-0 text-center text-sm-start">Manage all verified business owner accounts</p>
        </div>
        <div>
            <a asp-controller="Admin" asp-action="Index" class="btn btn-outline-primary">
                <i class="fas fa-arrow-left me-2"></i>Back to Dashboard
            </a>
        </div>
    </div>

    <!-- Main Content -->
    <div class="card shadow mb-4">
        <div class="card-header py-3 d-flex justify-content-between align-items-center">
            <h6 class="m-0 font-weight-bold text-primary">All Business Owners</h6>
            <div class="input-group" style="width: 300px;">
                <input type="text" class="form-control search-input" placeholder="Search..." aria-label="Search">
                <div class="input-group-append">
                    <span class="input-group-text"><i class="fas fa-search"></i></span>
                </div>
            </div>
        </div>
        <div class="card-body">
            <div class="table-responsive">
                <table class="table table-hover" id="businessOwnersTable">
                    <thead class="table-light">
                        <tr>
                            <th>Business Name</th>
                            <th>Owner Name</th>
                            <th>Email</th>
                            <th>Category</th>
                            <th>Marketplace Status</th>
                            <th>Account Status</th>
                            <th>Actions</th>
                        </tr>
                    </thead>
                    <tbody>
                        @if (Model != null && Model.Any())
                        {
                            @foreach (var user in Model)
                            {
                                <tr>
                                    <td>@user.BusinessName</td>
                                    <td>@user.FirstName @user.LastName</td>
                                    <td>@user.Email</td>
                                    <td>@user.CategoryOfBusiness</td>
                                    <td>
                                        @switch (user.MarkerPlaceStatus)
                                        {
                                            case Project_Creation.Models.Entities.Users.MarketplaceStatus.NotApplied:
                                                <span class="badge bg-success">Not Applied</span>
                                                break;
                                            case Project_Creation.Models.Entities.Users.MarketplaceStatus.AwaitingApproval:
                                                <span class="badge bg-warning">Awaiting Approval</span>
                                                break;
                                            case Project_Creation.Models.Entities.Users.MarketplaceStatus.Authorized:
                                                <span class="badge bg-secondary">Authorized</span>
                                                break;
                                            case Project_Creation.Models.Entities.Users.MarketplaceStatus.Rejected:
                                                <span class="badge bg-danger">Rejected</span>
                                                break;
                                        }
                                    </td>
                                    <td>
                                        @switch (user.AccountStatus)
                                        {
                                            case Project_Creation.Models.Entities.Users.AccountStatuss.Active:
                                                <span class="badge bg-success">Active</span>
                                                break;
                                            case Project_Creation.Models.Entities.Users.AccountStatuss.Suspended:
                                                <span class="badge bg-warning">Suspended</span>
                                                break;
                                            case Project_Creation.Models.Entities.Users.AccountStatuss.Deactivated:
                                                <span class="badge bg-danger">Deactivated</span>
                                                break;
                                        }
                                    </td>
                                    <td>
                                        <button class="btn btn-outline-info btn-view me-1" data-id="@user.Id" type="button" title="View Details"><i class="bi bi-eye"></i></button>
                                        <button class="btn btn-outline-primary btn-status me-1" data-id="@user.Id" type="button" title="Change Status"><i class="bi bi-pencil"></i></button>
                                    </td>
                                </tr>
                            }
                        }
                        else
                        {
                            <tr>
                                <td colspan="7" class="text-center py-4 text-muted">No business owners found</td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>

<!-- Modal for viewing user details -->
<div class="modal fade" id="userDetailsModal" tabindex="-1" role="dialog" aria-hidden="true">
    <div class="modal-dialog modal-xl" role="document">
        <div class="modal-content">
            <div class="modal-header bg-info text-white">
                <h5 class="modal-title"><i class="bi bi-person-lines-fill"></i> User Details</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body" id="userDetailsContent">
                <div class="text-center py-5">
                    <div class="spinner-border text-primary" role="status">
                        <span class="visually-hidden">Loading...</span>
                    </div>
                    <p class="mt-2">Loading user details...</p>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>

<!-- Modal for changing user status -->
<div class="modal fade" id="changeStatusModal" tabindex="-1" role="dialog" aria-hidden="true">
    <div class="modal-dialog modal-lg" role="document">
        <div class="modal-content">
            <div class="modal-header bg-primary text-white">
                <h5 class="modal-title"><i class="bi bi-pencil-square"></i> Change User Status</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form id="statusForm" class="needs-validation" novalidate>
                    <input type="hidden" id="statusUserId" value="">
                    <div class="row mb-3">
                        <div class="col-md-6">
                            <div class="form-group">
                                <label for="userNameDisplay" class="form-label">User</label>
                                <input type="text" class="form-control" id="userNameDisplay" readonly>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="form-group">
                                <label for="userEmailDisplay" class="form-label">Email</label>
                                <input type="text" class="form-control" id="userEmailDisplay" readonly>
                            </div>
                        </div>
                    </div>
                    <div class="row mb-3">
                        <div class="col-md-6">
                            <div class="form-group">
                                <label for="marketplaceStatus" class="form-label">Marketplace Status</label>
                                <select class="form-select" id="marketplaceStatus" required>
                                    <option value="0">Not Applied</option>
                                    <option value="1">Awaiting Approval</option>
                                    <option value="2">Authorized</option>
                                    <option value="3">Rejected</option>
                                </select>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="form-group">
                                <label for="accountStatus" class="form-label">Account Status</label>
                                <select class="form-select" id="accountStatus" required>
                                    <option value="0">Active</option>
                                    <option value="1">Suspended</option>
                                    <option value="2">Deactivated</option>
                                </select>
                            </div>
                        </div>
                    </div>
                    <div class="form-group mb-3">
                        <label for="statusReason" class="form-label">Status Change Reason <span class="text-danger">*</span></label>
                        <textarea class="form-control" id="statusReason" rows="3" required></textarea>
                        <div class="invalid-feedback">
                            Please provide a reason for the status change.
                        </div>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                <button type="button" class="btn btn-primary" id="confirmStatusChange">Save Changes</button>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        $(document).ready(function() {
            // Enhanced search functionality
            $('.search-input').on('keyup', function() {
                var value = $(this).val().toLowerCase();
                $("#businessOwnersTable tbody tr").filter(function() {
                    $(this).toggle($(this).text().toLowerCase().indexOf(value) > -1)
                });
            });

            // View user details
            $(document).on('click', '.btn-view', function() {
                var userId = $(this).data('id');

                $('#userDetailsContent').html(`
                    <div class="text-center py-5">
                        <div class="spinner-border text-primary" role="status">
                            <span class="visually-hidden">Loading...</span>
                        </div>
                        <p class="mt-2">Loading user details...</p>
                    </div>
                `);

                $('#userDetailsModal').modal('show');

                $.ajax({
                    url: '/Admin/GetUserDetails',
                    type: 'GET',
                    data: { id: userId },
                    success: function(response) {
                        $('#userDetailsContent').html(response);
                    },
                    error: function() {
                        $('#userDetailsContent').html(`
                            <div class="alert alert-danger">
                                <i class="bi bi-exclamation-triangle"></i> Error loading user details. Please try again.
                            </div>
                        `);
                    }
                });
            });

            // Open change status modal
            $(document).on('click', '.btn-status', function() {
                var userId = $(this).data('id');
                $('#statusUserId').val(userId);
                $('#statusForm').removeClass('was-validated');
                $('#statusReason').val('');

                // Get current user status
                $.ajax({
                    url: '/Admin/GetUserStatusJson',
                    type: 'GET',
                    data: { id: userId },
                    success: function(response) {
                        if (response.success) {
                            $('#userNameDisplay').val(response.name);
                            $('#userEmailDisplay').val(response.email);

                            // Set marketplace status
                            switch(response.marketplaceStatus) {
                                case 'NotApplied':
                                    $('#marketplaceStatus').val(0);
                                    break;
                                case 'AwaitingApproval':
                                    $('#marketplaceStatus').val(1);
                                    break;
                                case 'Authorized':
                                    $('#marketplaceStatus').val(2);
                                    break;
                                case 'Rejected':
                                    $('#marketplaceStatus').val(3);
                                    break;
                            }

                            // Set account status
                            if (response.accountStatus === 'Active') {
                                $('#accountStatus').val(0);
                            } else if (response.accountStatus === 'Suspended') {
                                $('#accountStatus').val(1);
                            } else if (response.accountStatus === 'Deactivated') {
                                $('#accountStatus').val(2);
                            }

                            $('#changeStatusModal').modal('show');
                        } else {
                            Swal.fire({
                                title: 'Error!',
                                text: response.message || 'Failed to load user status.',
                                icon: 'error',
                                confirmButtonColor: '#dc3545'
                            });
                        }
                    },
                    error: function() {
                        Swal.fire({
                            title: 'Error!',
                            text: 'An error occurred while loading user status.',
                            icon: 'error',
                            confirmButtonColor: '#dc3545'
                        });
                    }
                });
            });

            // Handle status change form submission
            $('#confirmStatusChange').click(function() {
                var form = document.getElementById('statusForm');

                if (form.checkValidity() === false) {
                    event.preventDefault();
                    event.stopPropagation();
                    form.classList.add('was-validated');
                    return;
                }

                var userId = $('#statusUserId').val();
                var marketplaceStatus = $('#marketplaceStatus').val();
                var accountStatus = $('#accountStatus').val();
                var statusReason = $('#statusReason').val();

                // Update account status first
                $.ajax({
                    url: '/Admin/UpdateAccountStatus',
                    type: 'POST',
                    data: {
                        userId: userId,
                        accountStatus: accountStatus,
                        statusReason: statusReason,
                        __RequestVerificationToken: $('input[name="__RequestVerificationToken"]').val()
                    },
                    success: function(response) {
                        if (response.success) {
                            // Then update marketplace status
                            $.ajax({
                                url: '/Admin/ChangeUserMarketplaceStatus',
                                type: 'POST',
                                data: {
                                    id: userId,
                                    MarkerPlaceStatus2: marketplaceStatus,
                                    __RequestVerificationToken: $('input[name="__RequestVerificationToken"]').val()
                                },
                                success: function(mpResponse) {
                                    $('#changeStatusModal').modal('hide');

                                    if (mpResponse.success) {
                                        Swal.fire({
                                            title: 'Updated!',
                                            text: 'User status has been updated successfully.',
                                            icon: 'success',
                                            confirmButtonColor: '#28a745'
                                        }).then(() => {
                                            location.reload();
                                        });
                                    } else {
                                        Swal.fire({
                                            title: 'Partial Update',
                                            text: 'Account status was updated but marketplace status failed: ' + mpResponse.message,
                                            icon: 'warning',
                                            confirmButtonColor: '#ffc107'
                                        }).then(() => {
                                            location.reload();
                                        });
                                    }
                                },
                                error: function() {
                                    $('#changeStatusModal').modal('hide');

                                    Swal.fire({
                                        title: 'Partial Update',
                                        text: 'Account status was updated but marketplace status failed.',
                                        icon: 'warning',
                                        confirmButtonColor: '#ffc107'
                                    }).then(() => {
                                        location.reload();
                                    });
                                }
                            });
                        } else {
                            $('#changeStatusModal').modal('hide');

                            Swal.fire({
                                title: 'Error!',
                                text: response.message || 'Failed to update user status.',
                                icon: 'error',
                                confirmButtonColor: '#dc3545'
                            });
                        }
                    },
                    error: function() {
                        $('#changeStatusModal').modal('hide');

                        Swal.fire({
                            title: 'Error!',
                            text: 'An error occurred while updating user status.',
                            icon: 'error',
                            confirmButtonColor: '#dc3545'
                        });
                    }
                });
            });
        });
    </script>
}
