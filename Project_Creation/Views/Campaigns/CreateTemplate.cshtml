@model Project_Creation.Models.Entities.MessageTemplate

@{
    ViewData["Title"] = "Create Email Template";
}

<div class="container mt-4">
    <div class="card shadow-sm mb-4">
        <div class="card-header d-flex justify-content-between align-items-center">
            <h4 class="mb-0 text-accent">Create Email Template</h4>
            <a asp-action="Templates" class="btn btn-outline-secondary">
                <i class="fas fa-arrow-left me-1"></i> Back to Templates
            </a>
        </div>
        
        <div class="card-body">
            <form asp-action="CreateTemplate" id="templateForm" method="post">
                <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                @Html.AntiForgeryToken()
                
                <div class="mb-3">
                    <label asp-for="Name" class="form-label">Template Name</label>
                    <input asp-for="Name" class="form-control" required />
                    <span asp-validation-for="Name" class="text-danger"></span>
                    <div class="form-text">Give your template a descriptive name</div>
                </div>
                
                <div class="mb-3">
                    <label asp-for="Subject" class="form-label">Email Subject</label>
                    <div class="input-group">
                        <input asp-for="Subject" class="form-control" required />
                        <button class="btn btn-outline-secondary dropdown-toggle" type="button" data-bs-toggle="dropdown">
                            <i class="fas fa-tags"></i> Insert Placeholder
                        </button>
                        <ul class="dropdown-menu dropdown-menu-end">
                            <li><a class="dropdown-item placeholder-item" data-placeholder="{{LeadName}}"><i class="fas fa-user me-2"></i> Lead Name</a></li>
                            <li><a class="dropdown-item placeholder-item" data-placeholder="{{BusinessName}}"><i class="fas fa-building me-2"></i> Your Business Name</a></li>
                        </ul>
                    </div>
                    <span asp-validation-for="Subject" class="text-danger"></span>
                </div>
                
                <div class="mb-3">
                    <label asp-for="Content" class="form-label">Email Content</label>
                    <div class="d-flex align-items-center mb-2">
                        <span class="me-2">Insert placeholder:</span>
                        <div class="btn-group">
                            <button type="button" class="btn btn-sm btn-outline-primary placeholder-btn" data-placeholder="{{LeadName}}" data-bs-toggle="tooltip" title="Insert Lead's Full Name">
                                <i class="fas fa-user me-1"></i> Name
                            </button>
                            <button type="button" class="btn btn-sm btn-outline-primary placeholder-btn" data-placeholder="{{LeadEmail}}" data-bs-toggle="tooltip" title="Insert Lead's Email">
                                <i class="fas fa-envelope me-1"></i> Email
                            </button>
                            <button type="button" class="btn btn-sm btn-outline-primary placeholder-btn" data-placeholder="{{LeadPhone}}" data-bs-toggle="tooltip" title="Insert Lead's Phone Number">
                                <i class="fas fa-phone me-1"></i> Phone
                            </button>
                            <button type="button" class="btn btn-sm btn-outline-primary placeholder-btn" data-placeholder="{{BusinessName}}" data-bs-toggle="tooltip" title="Insert Your Business Name">
                                <i class="fas fa-building me-1"></i> Business
                            </button>
                            <button type="button" class="btn btn-sm btn-outline-primary placeholder-btn" data-placeholder="{{LastPurchaseDate}}" data-bs-toggle="tooltip" title="Insert Lead's Last Purchase Date">
                                <i class="fas fa-calendar me-1"></i> Last Purchase
                            </button>
                        </div>
                    </div>
                    
                    <!-- Product placeholders -->
                    <div class="d-flex align-items-center mb-2">
                        <span class="me-2">Product placeholders:</span>
                        <div class="btn-group" id="productPlaceholders">
                            <button type="button" class="btn btn-sm btn-outline-success" id="loadProductsBtn">
                                <i class="fas fa-box me-1"></i> Load Products
                            </button>
                            <!-- Product buttons will be added here dynamically -->
                        </div>
                    </div>
                    
                    <textarea asp-for="Content" id="templateContent" class="form-control" rows="12" required></textarea>
                    <span asp-validation-for="Content" class="text-danger"></span>
                    <div class="form-text">
                        <i class="fas fa-info-circle me-1"></i> You can use HTML tags to format your email and insert placeholders for dynamic content.
                    </div>
                </div>
                
                <div class="mb-3 form-check">
                    <input asp-for="IsDefault" class="form-check-input" />
                    <label asp-for="IsDefault" class="form-check-label">Set as default template</label>
                </div>
                
                <div class="mt-4">
                    <button type="submit" class="btn btn-primary" id="saveTemplateBtn">
                        <i class="fas fa-save me-1"></i> Save Template
                    </button>
                    <a asp-action="Templates" class="btn btn-outline-secondary ms-2">Cancel</a>
                </div>
            </form>
            
            <!-- Loading indicator -->
            <div id="loadingIndicator" style="display: none;" class="text-center mt-3">
                <div class="spinner-border text-primary" role="status">
                    <span class="visually-hidden">Loading...</span>
                </div>
                <p class="mt-2">Saving template...</p>
            </div>
        </div>
    </div>
    
    <!-- Template Help Card -->
    <div class="card shadow-sm mb-4">
        <div class="card-header">
            <h5 class="mb-0"><i class="fas fa-lightbulb me-2"></i> Template Tips</h5>
        </div>
        <div class="card-body">
            <div class="row">
                <div class="col-md-6">
                    <h6>HTML Formatting Examples:</h6>
                    <ul class="list-unstyled">
                        <li><code>&lt;strong&gt;Bold text&lt;/strong&gt;</code> - <strong>Bold text</strong></li>
                        <li><code>&lt;em&gt;Italic text&lt;/em&gt;</code> - <em>Italic text</em></li>
                        <li><code>&lt;u&gt;Underlined text&lt;/u&gt;</code> - <u>Underlined text</u></li>
                        <li><code>&lt;h3&gt;Heading&lt;/h3&gt;</code> - <h5 class="d-inline">Heading</h5></li>
                        <li><code>&lt;a href="..."&gt;Link text&lt;/a&gt;</code> - <a href="#">Link text</a></li>
                        <li><code>&lt;ul&gt;&lt;li&gt;List item&lt;/li&gt;&lt;/ul&gt;</code> - Bulleted list</li>
                    </ul>
                </div>
                <div class="col-md-6">
                    <h6>Using Dynamic Placeholders:</h6>
                    <ul>
                        <li><code>{{LeadName}}</code> - Will be replaced with the lead's full name</li>
                        <li><code>{{LeadEmail}}</code> - Will be replaced with the lead's email address</li>
                        <li><code>{{LeadPhone}}</code> - Will be replaced with the lead's phone number</li>
                        <li><code>{{BusinessName}}</code> - Will be replaced with your business name</li>
                        <li><code>{{LastPurchaseDate}}</code> - Will be replaced with the lead's last purchase date</li>
                        <li><code>{{Product:ID}}</code> - Will be replaced with product details (replace ID with product ID)</li>
                    </ul>
                    <div class="alert alert-info mt-2">
                        <i class="fas fa-info-circle me-2"></i> Example: "Hello <strong>{{LeadName}}</strong>, thank you for your interest in <strong>{{BusinessName}}</strong>!"
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
    
    <script>
        $(document).ready(function() {
            // Initialize tooltips
            var tooltipTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle="tooltip"]'))
            var tooltipList = tooltipTriggerList.map(function (tooltipTriggerEl) {
                return new bootstrap.Tooltip(tooltipTriggerEl)
            });
            
            // Handle form submission
            $('#templateForm').submit(function(e) {
                e.preventDefault();
                
                console.log('Form submitted');
                
                // Show loading indicator
                $('#saveTemplateBtn').prop('disabled', true);
                $('#loadingIndicator').show();
                
                // Get form data
                const formData = $(this).serialize();
                console.log('Form data:', formData);
                
                // Submit form via AJAX
                $.ajax({
                    url: '@Url.Action("CreateTemplate")',
                    type: 'POST',
                    data: formData,
                    headers: {
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                    success: function(response) {
                        console.log('AJAX success response:', response);
                        console.log('Full response object:', JSON.stringify(response));
                        
                        if (response && response.success) {
                            // Show success message
                            alert('Template saved successfully!');
                            
                            // Always redirect to Templates page after successful save
                            window.location.href = response.redirectUrl || '@Url.Action("Templates")';
                        } else {
                            // Hide loading indicator
                            $('#saveTemplateBtn').prop('disabled', false);
                            $('#loadingIndicator').hide();
                            
                            // Display any errors
                            if (response && response.errors && response.errors.length > 0) {
                                alert('Error: ' + response.errors.join('\n'));
                            } else {
                                alert('An unknown error occurred while saving the template.');
                            }
                        }
                    },
                    error: function(xhr, status, error) {
                        // Hide loading indicator
                        $('#saveTemplateBtn').prop('disabled', false);
                        $('#loadingIndicator').hide();
                        
                        console.log('AJAX error:', status, error);
                        console.log('Response text:', xhr.responseText);
                        
                        // Try to parse response to get validation errors
                        try {
                            const response = JSON.parse(xhr.responseText);
                            console.log('Parsed error response:', response);
                            
                            if (response && response.errors && response.errors.length > 0) {
                                // Display validation errors
                                alert('Please fix the following errors:\n\n' + response.errors.join('\n'));
                            } else {
                                // Show generic error message
                                alert('Error saving template: ' + error);
                            }
                        } catch (e) {
                            console.log('Error parsing response:', e);
                            // Show generic error message
                            alert('Error saving template: ' + error);
                        }
                    },
                    complete: function() {
                        console.log('AJAX request completed');
                    }
                });
            });
            
            // Insert placeholder into content
            $('.placeholder-btn').click(function() {
                const placeholder = $(this).data('placeholder');
                const textarea = $('#templateContent');
                const cursorPos = textarea.prop('selectionStart');
                const textBefore = textarea.val().substring(0, cursorPos);
                const textAfter = textarea.val().substring(cursorPos);
                
                textarea.val(textBefore + placeholder + textAfter);
                
                // Set focus back to textarea and place cursor after inserted placeholder
                const newCursorPos = cursorPos + placeholder.length;
                textarea.focus();
                textarea[0].setSelectionRange(newCursorPos, newCursorPos);
            });
            
            // Insert placeholder into subject
            $('.placeholder-item').click(function() {
                const placeholder = $(this).data('placeholder');
                const input = $('#Subject');
                const cursorPos = input.prop('selectionStart');
                const textBefore = input.val().substring(0, cursorPos);
                const textAfter = input.val().substring(cursorPos);
                
                input.val(textBefore + placeholder + textAfter);
                
                // Set focus back to input and place cursor after inserted placeholder
                const newCursorPos = cursorPos + placeholder.length;
                input.focus();
                input[0].setSelectionRange(newCursorPos, newCursorPos);
            });
            
            // Load products button click
            $('#loadProductsBtn').click(function() {
                // Show loading state
                $(this).prop('disabled', true).html('<i class="fas fa-spinner fa-spin me-1"></i> Loading...');
                
                // Clear existing product buttons
                $('#productPlaceholders button:not(#loadProductsBtn)').remove();
                
                // Get products via AJAX
                $.ajax({
                    url: '@Url.Action("GetProducts")',
                    type: 'GET',
                    success: function(products) {
                        // Reset button state
                        $('#loadProductsBtn').prop('disabled', false).html('<i class="fas fa-box me-1"></i> Load Products');
                        
                        if (products && products.length > 0) {
                            // Add product buttons
                            products.forEach(function(product) {
                                const placeholder = `{{Product:${product.id}}}`;
                                const button = $(`<button type="button" class="btn btn-sm btn-outline-success product-placeholder-btn ms-1" data-placeholder="${placeholder}" data-bs-toggle="tooltip" title="Insert ${product.name}">
                                    <i class="fas fa-box me-1"></i> ${product.name.substring(0, 15)}${product.name.length > 15 ? '...' : ''}
                                </button>`);
                                
                                // Add button to container
                                $('#productPlaceholders').append(button);
                                
                                // Initialize tooltip
                                new bootstrap.Tooltip(button[0]);
                                
                                // Add click handler
                                button.click(function() {
                                    const placeholder = $(this).data('placeholder');
                                    const textarea = $('#templateContent');
                                    const cursorPos = textarea.prop('selectionStart');
                                    const textBefore = textarea.val().substring(0, cursorPos);
                                    const textAfter = textarea.val().substring(cursorPos);
                                    
                                    textarea.val(textBefore + placeholder + textAfter);
                                    
                                    // Set focus back to textarea and place cursor after inserted placeholder
                                    const newCursorPos = cursorPos + placeholder.length;
                                    textarea.focus();
                                    textarea[0].setSelectionRange(newCursorPos, newCursorPos);
                                });
                            });
                        } else {
                            // No products found
                            $('#productPlaceholders').append('<span class="ms-2 text-muted">No products found</span>');
                        }
                    },
                    error: function(xhr, status, error) {
                        // Reset button state
                        $('#loadProductsBtn').prop('disabled', false).html('<i class="fas fa-box me-1"></i> Load Products');
                        
                        // Show error message
                        $('#productPlaceholders').append('<span class="ms-2 text-danger">Error loading products</span>');
                    }
                });
            });
        });
    </script>
} 