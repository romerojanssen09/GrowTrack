@model Project_Creation.Models.Entities.Campaign

@{
    ViewData["Title"] = "Edit Campaign";
    var products = ViewBag.Products as List<Project_Creation.Models.Entities.Product>;
    var leads = ViewBag.Leads as List<Project_Creation.Models.Entities.Leads>;
    var selectedLeadIds = !string.IsNullOrEmpty(Model.TargetLeads)
        ? Model.TargetLeads.Split(',').ToList()
        : new List<string>();
}

<div class="container-fluid">
    <div class="row mb-4">
        <div class="col-md-12 d-flex justify-content-between align-items-center">
            <h1 class="display-4">Edit Campaign</h1>
            <div>
                <a class="btn btn-outline-secondary" asp-action="Index">
                    <i class="fas fa-arrow-left me-1"></i> Back To List
                </a>
            </div>
        </div>
    </div>

    <div class="row">
        <!-- Campaign Form -->
        <div class="col-md-7">
            <div class="card shadow mb-4">
                <div class="card-header bg-primary text-white">
                    <h5 class="mb-0"><i class="fas fa-edit me-2"></i> Campaign Details</h5>
                </div>
                <div class="card-body">
                    <form id="editCampaignForm">
                        @Html.AntiForgeryToken()
                        <input type="hidden" asp-for="Id" />
                        <input type="hidden" asp-for="CampaignAt" />
                        <input type="hidden" asp-for="IsSent" />
                        <input type="hidden" asp-for="SenderId" />

                        <!-- Campaign Name -->
                        <div class="mb-3">
                            <label asp-for="CampaignName" class="form-label">Campaign Name *</label>
                            <input asp-for="CampaignName" class="form-control" required>
                            <span asp-validation-for="CampaignName" class="text-danger"></span>
                        </div>

                        <!-- Subject Line -->
                        <div class="mb-3">
                            <label asp-for="Subject" class="form-label">Subject *</label>
                            <input asp-for="Subject" class="form-control" required>
                            <span asp-validation-for="Subject" class="text-danger"></span>
                        </div>

                        <!-- Message Content -->
                        <div class="mb-3">
                            <label asp-for="Message" class="form-label">Message *</label>
                            <textarea asp-for="Message" class="form-control" rows="10" required></textarea>
                            <span asp-validation-for="Message" class="text-danger"></span>
                        </div>

                        <!-- Notes -->
                        <div class="mb-3">
                            <label asp-for="Notes" class="form-label">Notes (optional)</label>
                            <textarea asp-for="Notes" class="form-control" rows="2"></textarea>
                            <span asp-validation-for="Notes" class="text-danger"></span>
                        </div>

                        <!-- Selected Leads Counter -->
                        <div class="alert alert-info d-flex justify-content-between align-items-center">
                            <div>
                                <i class="fas fa-info-circle me-2"></i>
                                <strong id="selectedLeadsCount">0</strong> leads selected for this campaign
                            </div>
                            <button type="button" class="btn btn-sm btn-outline-primary" id="viewSelectedLeadsBtn">
                                View Selected
                            </button>
                        </div>

                        <!-- Action Buttons -->
                        <div class="d-flex justify-content-between">
                            <button type="submit" class="btn btn-primary">
                                <i class="fas fa-save me-1"></i> Save Changes
                            </button>
                            <button type="button" class="btn btn-success" id="saveAndResendBtn">
                                <i class="fas fa-paper-plane me-1"></i> Save & Resend Campaign
                            </button>
                        </div>
                    </form>
                </div>
            </div>

            <!-- Campaign History -->
            @if (Model.IsSent || Model.UpdatedAt.HasValue || Model.ResendAt.HasValue)
            {
                <div class="card shadow mb-4">
                    <div class="card-header bg-secondary text-white">
                        <h5 class="mb-0"><i class="fas fa-history me-2"></i> Campaign History</h5>
                    </div>
                    <div class="card-body">
                        <ul class="list-group">
                            <li class="list-group-item">
                                <i class="fas fa-calendar-plus me-2 text-primary"></i>
                                <strong>Created:</strong> @Model.CampaignAt.ToString("MM/dd/yyyy HH:mm")
                            </li>
                            @if (Model.IsSent)
                            {
                                <li class="list-group-item">
                                    <i class="fas fa-paper-plane me-2 text-success"></i>
                                    <strong>Initial Send:</strong> @Model.CampaignAt.ToString("MM/dd/yyyy HH:mm")
                                </li>
                            }
                            @if (Model.UpdatedAt.HasValue)
                            {
                                <li class="list-group-item">
                                    <i class="fas fa-edit me-2 text-warning"></i>
                                    <strong>Last Updated:</strong> @Model.UpdatedAt.Value.ToString("MM/dd/yyyy HH:mm")
                                </li>
                            }
                            @if (Model.ResendAt.HasValue)
                            {
                                <li class="list-group-item">
                                    <i class="fas fa-share me-2 text-info"></i>
                                    <strong>Last Resent:</strong> @Model.ResendAt.Value.ToString("MM/dd/yyyy HH:mm")
                                </li>
                            }
                        </ul>
                    </div>
                </div>
            }
        </div>
            
        <!-- Leads Column -->
        <div class="col-md-5">
            <!-- Leads Panel with Filterable Content -->
            <div class="position-relative">
                <!-- Filtered Leads Panel -->
                <div class="card shadow">
                    <div class="card-header bg-secondary text-white d-flex justify-content-between align-items-center">
                        <h5 class="mb-0"><i class="fas fa-users me-2"></i> Available Leads</h5>
                        <div>
                            <span id="leadCountBadge" class="badge bg-primary text-dark me-2">0 leads</span>
                            <button class="btn btn-sm btn-outline-primary" type="button" data-bs-toggle="collapse" data-bs-target="#filterCollapse" aria-expanded="false">
                                <i class="fas fa-filter me-1"></i> Show Filters
                            </button>
                        </div>
                    </div>
                    <div class="card-body">
                        <div id="filteredLeadsContainer">
                            <div class="text-center py-5">
                                <i class="fas fa-users fa-3x text-muted mb-3"></i>
                                <p class="lead">All available leads will be shown here</p>
                                <button class="btn btn-primary" type="button" data-bs-toggle="collapse" data-bs-target="#filterCollapse" aria-expanded="false">
                                    <i class="fas fa-filter me-2"></i> Filter Leads
                                </button>
                            </div>
                        </div>
                    </div>
                </div>
                
                <!-- Lead Filter Panel (Absolutely positioned) -->
                <div class="collapse position-absolute top-0 end-0 w-100" id="filterCollapse" style="z-index: 100;">
                    <div class="card shadow">
                        <div class="card-header bg-primary text-white d-flex justify-content-between align-items-center">
                            <h5 class="mb-0"><i class="fas fa-filter me-2"></i> Filter Leads</h5>
                            <button type="button" class="btn-close btn-close-white" data-bs-toggle="collapse" data-bs-target="#filterCollapse" aria-label="Close"></button>
                        </div>
                        <div class="card-body">
                            <form id="leadFilterForm">
                                <!-- Basic Filters -->
                                <div class="mb-3">
                                    <label for="FilterStatus" class="form-label">Lead Status</label>
                                    <select id="FilterStatus" name="FilterStatus" class="form-select">
                                        <option value="">-- All Statuses --</option>
                                        <option value="New">New</option>
                                        <option value="Cold">Cold</option>
                                        <option value="Warm">Warm</option>
                                        <option value="Hot">Hot</option>
                                        <option value="Lost">Lost</option>
                                    </select>
                                </div>

                                <!-- Points Range -->
                                <div class="row mb-3">
                                    <div class="col-6">
                                        <label for="FilterMinPoints" class="form-label">Min Points</label>
                                        <input type="number" id="FilterMinPoints" name="FilterMinPoints" class="form-control" min="0" placeholder="Min">
                                    </div>
                                    <div class="col-6">
                                        <label for="FilterMaxPoints" class="form-label">Max Points</label>
                                        <input type="number" id="FilterMaxPoints" name="FilterMaxPoints" class="form-control" min="0" placeholder="Max">
                                    </div>
                                </div>

                                <!-- Search -->
                                <div class="mb-3">
                                    <label for="FilterSearch" class="form-label">Search</label>
                                    <input type="text" id="FilterSearch" name="FilterSearch" class="form-control" placeholder="Name, email, or phone">
                                </div>

                                <!-- Submit Button -->
                                <div class="d-grid gap-2">
                                    <button type="submit" class="btn btn-primary" id="applyFiltersBtn">
                                        <i class="fas fa-search me-1"></i> Find Leads
                                    </button>
                                    <button type="button" class="btn btn-outline-secondary" id="resetFiltersBtn">
                                        <i class="fas fa-undo me-1"></i> Reset Filters
                                    </button>
                                </div>
                            </form>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Selected Leads Modal -->
<div class="modal fade" id="selectedLeadsModal" tabindex="-1" aria-labelledby="selectedLeadsModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header bg-primary text-white">
                <h5 class="modal-title" id="selectedLeadsModalLabel">Selected Leads</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <div id="selectedLeadsContainer">
                    <p class="text-center">No leads selected</p>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>

<!-- Sending Modal -->
<div class="modal fade" id="sendingModal" data-bs-backdrop="static" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header bg-primary text-white">
                <h5 class="modal-title"><i class="fas fa-paper-plane me-2"></i> Resending Campaign</h5>
            </div>
            <div class="modal-body">
                <div class="text-center mb-3">
                    <div class="spinner-border text-primary" role="status">
                        <span class="visually-hidden">Loading...</span>
                    </div>
                </div>
                <div id="sendingProgress" class="text-center">
                    <p>Preparing to send campaign to <span id="recipientCount">0</span> recipients...</p>
                    <div class="progress mb-3">
                        <div class="progress-bar progress-bar-striped progress-bar-animated" role="progressbar" style="width: 0%"></div>
                    </div>
                    <div class="d-flex justify-content-between">
                        <small class="text-muted">This may take a while depending on the number of recipients</small>
                        <small class="text-muted">Sent: <span id="sentCount">0</span>/<span id="totalCount">0</span></small>
                    </div>
                    <div class="alert alert-info mt-3">
                        <i class="fas fa-info-circle me-2"></i>
                        <span id="progressText">Initializing campaign send...</span>
                    </div>
                </div>
                
                <!-- Results section (hidden initially) -->
                <div id="sendingResults" class="mt-4" style="display: none;">
                    <div class="card">
                        <div class="card-header bg-success text-white">
                            <h5 class="mb-0"><i class="fas fa-check-circle me-2"></i> Campaign Sent</h5>
                        </div>
                        <div class="card-body">
                            <div class="row">
                                <div class="col-md-4 text-center">
                                    <div class="display-4 text-success" id="resultTotalCount">0</div>
                                    <p>Total Recipients</p>
                                </div>
                                <div class="col-md-4 text-center">
                                    <div class="display-4 text-primary" id="resultSentCount">0</div>
                                    <p>Successfully Sent</p>
                                </div>
                                <div class="col-md-4 text-center">
                                    <div class="display-4 text-danger" id="resultFailedCount">0</div>
                                    <p>Failed</p>
                                </div>
                            </div>
                            
                            <!-- Failed emails section (shown only if there are failures) -->
                            <div id="failedEmailsSection" class="mt-3" style="display: none;">
                                <h6 class="text-danger">Failed Emails:</h6>
                                <ul id="failedEmailsList" class="list-group">
                                    <!-- Failed emails will be added here -->
                                </ul>
                            </div>
                        </div>
                        <div class="card-footer">
                            <button type="button" class="btn btn-primary" id="viewCampaignBtn">
                                <i class="fas fa-eye me-2"></i> View Campaign
                            </button>
                            <button type="button" class="btn btn-secondary" id="closeModalBtn">
                                <i class="fas fa-times me-2"></i> Close
                            </button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@section Styles {
    <style>
        .card {
            border: 1px solid #dee2e6;
            margin-bottom: 1rem;
        }
        
        .bg-accent {
            background-color: #4e73df;
        }
        
        .text-accent {
            color: #4e73df;
        }
        
        .card-header {
            border-bottom: 1px solid #dee2e6;
        }
        
        .form-check-label {
            cursor: pointer;
        }
        
        .lead-item {
            transition: all 0.3s ease;
        }
        
        .lead-item:hover {
            background-color: #f8f9fa;
        }
    </style>
}

@section Scripts {
    <script>
        $(document).ready(function() {
            // Initialize - count selected leads
            updateSelectedLeadsCount();
            
            // Filter form submission
            $('#leadFilterForm').submit(function(e) {
                e.preventDefault();
                
                const formData = $(this).serialize();
                $('#filteredLeadsContainer').html('<div class="text-center py-5"><div class="spinner-border" role="status"></div><p class="mt-3">Loading leads...</p></div>');
                
                $.post('@Url.Action("FilterLeads")', formData, function(data) {
                    $('#filteredLeadsContainer').html(data);
                    
                    // Update lead count badge
                    const leadCount = $('.filtered-lead-checkbox').length;
                    $('#leadCountBadge').text(leadCount + ' leads');
                    
                    // Re-attach event handlers for the checkboxes
                    $('.filtered-lead-checkbox').change(function() {
                        updateSelectedLeadsCount();
                    });
                    
                    // Check previously selected leads
                    checkPreviouslySelectedLeads();
                });
            });
            
            // Reset filters button
            $('#resetFiltersBtn').click(function() {
                $('#leadFilterForm')[0].reset();
                loadAllLeads();
            });
            
            // View selected leads button
            $('#viewSelectedLeadsBtn').click(function() {
                const selectedLeads = $('.filtered-lead-checkbox:checked');
                const selectedLeadsContainer = $('#selectedLeadsContainer');
                
                if (selectedLeads.length === 0) {
                    selectedLeadsContainer.html('<div class="alert alert-warning">No leads selected</div>');
                } else {
                    let html = '<div class="table-responsive"><table class="table table-striped"><thead><tr><th>Name</th><th>Email</th></tr></thead><tbody>';
                    
                    selectedLeads.each(function() {
                        const name = $(this).data('lead-name');
                        const email = $(this).data('lead-email');
                        html += `<tr><td>${name}</td><td>${email}</td></tr>`;
                    });
                    
                    html += '</tbody></table></div>';
                    selectedLeadsContainer.html(html);
                }
                
                $('#selectedLeadsModal').modal('show');
            });
            
            // Edit campaign form submission
            $('#editCampaignForm').submit(function(e) {
                e.preventDefault();
                
                const selectedLeads = $('.filtered-lead-checkbox:checked');
                
                if (selectedLeads.length === 0) {
                    Swal.fire({
                        icon: 'error',
                        title: 'No Leads Selected',
                        text: 'Please select at least one lead to send the campaign to.'
                    });
                    return;
                }
                
                // Get the selected lead IDs
                const selectedLeadIds = selectedLeads.map(function() {
                    return this.value;
                }).get();
                
                const formData = {
                    Id: $('#Id').val(),
                    CampaignName: $('#CampaignName').val(),
                    Subject: $('#Subject').val(),
                    Message: $('#Message').val(),
                    Notes: $('#Notes').val(),
                    SelectedLeadIds: selectedLeadIds,
                    __RequestVerificationToken: $('input[name="__RequestVerificationToken"]').val()
                };
                
                $.ajax({
                    url: '@Url.Action("Edit", "Campaigns")/' + $('#Id').val(),
                    type: 'POST',
                    data: formData,
                    traditional: true, // For arrays
                    success: function(response) {
                        if (response.success) {
                            Swal.fire({
                                icon: 'success',
                                title: 'Success!',
                                text: 'Campaign updated successfully!',
                                timer: 1500,
                                showConfirmButton: false
                            }).then(() => {
                                // Just stay on the page
                            });
                        } else {
                            let errorMessage = 'Failed to update campaign';
                            if (response.errors && response.errors.length > 0) {
                                errorMessage = response.errors.join('\n');
                            }
                            Swal.fire({
                                icon: 'error',
                                title: 'Error!',
                                text: errorMessage
                            });
                        }
                    },
                    error: function(xhr) {
                        let errorMessage = 'An error occurred while updating the campaign';
                        if (xhr.responseJSON && xhr.responseJSON.errors) {
                            errorMessage = xhr.responseJSON.errors.join('\n');
                        }
                        Swal.fire({
                            icon: 'error',
                            title: 'Error!',
                            text: errorMessage
                        });
                    }
                });
            });
            
            // Save and Resend button click
            $('#saveAndResendBtn').click(function() {
                const selectedLeads = $('.filtered-lead-checkbox:checked');
                
                if (selectedLeads.length === 0) {
                    Swal.fire({
                        icon: 'error',
                        title: 'No Leads Selected',
                        text: 'Please select at least one lead to send the campaign to.'
                    });
                    return;
                }
                
                // Show sending modal
                $('#sendingProgress').show();
                $('#sendingResults').hide();
                $('#recipientCount').text(selectedLeads.length);
                $('#totalCount').text(selectedLeads.length);
                $('#sentCount').text('0');
                $('.progress-bar').css('width', '0%');
                $('#progressText').text('Initializing campaign send...');
                $('#sendingModal').modal('show');
                
                // Get the selected lead IDs
                const selectedLeadIds = selectedLeads.map(function() {
                    return this.value;
                }).get();
                
                // Prepare form data for save and resend
                const formData = {
                    id: $('#Id').val(),
                    CampaignName: $('#CampaignName').val(),
                    Subject: $('#Subject').val(),
                    Message: $('#Message').val(),
                    SelectedLeadIds: selectedLeadIds,
                    __RequestVerificationToken: $('input[name="__RequestVerificationToken"]').val()
                };
                
                // Simulate progress while waiting for the actual response
                let progress = 0;
                let sentSoFar = 0;
                const totalEmails = selectedLeadIds.length;
                const progressInterval = setInterval(() => {
                    // Increment progress but cap at 90% until we get actual results
                    progress += Math.min(5, 90 - progress);
                    if (progress >= 90) {
                        progress = 90; // Cap at 90%
                    }
                    
                    // Update progress bar
                    $('.progress-bar').css('width', progress + '%');
                    
                    // Calculate estimated sent count based on progress percentage
                    sentSoFar = Math.floor((progress / 100) * totalEmails);
                    $('#sentCount').text(sentSoFar);
                    
                    // Update progress text
                    $('#progressText').text(`Sending emails... ${sentSoFar} of ${totalEmails} processed`);
                }, 500);
                
                // Send the request
                $.ajax({
                    url: '@Url.Action("Resend", "Campaigns")',
                    type: 'POST',
                    data: formData,
                    traditional: true, // For arrays
                    success: function(response) {
                        clearInterval(progressInterval);
                        
                        if (response.success) {
                            // Update progress to 100%
                            $('.progress-bar').css('width', '100%');
                            $('#sentCount').text(response.sentCount || totalEmails);
                            $('#progressText').text(`Campaign resent successfully! ${response.sentCount || totalEmails} of ${response.totalRecipients || totalEmails} emails sent.`);
                            
                            // Show results section immediately
                            $('#sendingProgress').hide();
                            $('#sendingResults').show();
                            
                            // Update result counters
                            $('#resultTotalCount').text(response.totalRecipients || totalEmails);
                            $('#resultSentCount').text(response.sentCount || totalEmails);
                            $('#resultFailedCount').text(response.failedCount || 0);
                            
                            // Show failed emails if any
                            if (response.failedCount > 0 && response.failedEmails && response.failedEmails.length > 0) {
                                $('#failedEmailsSection').show();
                                $('#failedEmailsList').empty();
                                
                                // Add each failed email to the list
                                response.failedEmails.forEach(email => {
                                    $('#failedEmailsList').append(`<li class="list-group-item text-danger"><i class="fas fa-exclamation-triangle me-2"></i>${email}</li>`);
                                });
                            } else {
                                $('#failedEmailsSection').hide();
                            }
                            
                            // Set up button actions
                            $('#viewCampaignBtn').off('click').on('click', function() {
                                window.location.href = '@Url.Action("Index")';
                            });
                            
                            $('#closeModalBtn').off('click').on('click', function() {
                                $('#sendingModal').modal('hide');
                            });
                        } else {
                            // Handle error
                            $('#sendingModal').modal('hide');
                            let errorMessage = 'Failed to send campaign';
                            if (response.message) {
                                errorMessage = response.message;
                            }
                            Swal.fire({
                                icon: 'error',
                                title: 'Error!',
                                text: errorMessage
                            });
                        }
                    },
                    error: function(xhr) {
                        clearInterval(progressInterval);
                        $('#sendingModal').modal('hide');
                        let errorMessage = 'An error occurred while sending the campaign';
                        if (xhr.responseJSON && xhr.responseJSON.message) {
                            errorMessage = xhr.responseJSON.message;
                        }
                        Swal.fire({
                            icon: 'error',
                            title: 'Error!',
                            text: errorMessage
                        });
                    }
                });
            });
            
            // Helper function to update the selected leads count
            function updateSelectedLeadsCount() {
                const count = $('.filtered-lead-checkbox:checked').length;
                $('#selectedLeadsCount').text(count);
            }
            
            // Function to load all leads
            function loadAllLeads() {
                $('#filteredLeadsContainer').html('<div class="text-center py-5"><div class="spinner-border" role="status"></div><p class="mt-3">Loading all leads...</p></div>');
                
                $.post('@Url.Action("GetAllLeads")', function(data) {
                    $('#filteredLeadsContainer').html(data);
                    
                    // Update lead count badge
                    const leadCount = $('.filtered-lead-checkbox').length;
                    $('#leadCountBadge').text(leadCount + ' leads');
                    
                    // Re-attach event handlers for the checkboxes
                    $('.filtered-lead-checkbox').change(function() {
                        updateSelectedLeadsCount();
                    });
                    
                    // Check previously selected leads
                    checkPreviouslySelectedLeads();
                });
            }
            
            // Function to check previously selected leads
            function checkPreviouslySelectedLeads() {
                var selectedLeadIds = '@Model.TargetLeads'.split(',');
                
                $('.filtered-lead-checkbox').each(function() {
                    if (selectedLeadIds.includes($(this).val().toString())) {
                        $(this).prop('checked', true);
                    }
                });
                
                updateSelectedLeadsCount();
            }
            
            // Load all leads on page load
            loadAllLeads();
        });
    </script>
} 