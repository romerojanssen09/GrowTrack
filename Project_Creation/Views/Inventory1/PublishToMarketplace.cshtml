@model Project_Creation.Models.ViewModels.PublishToMarketplaceViewModel

@{
    ViewData["Title"] = "Publish to Marketplace";
}

<div class="container mt-4">
    <div class="row">
        <div class="col-md-8 mx-auto">
            <div class="card shadow">
                <div class="card-header bg-primary text-white">
                    <h4 class="mb-0">
                        <i class="fas fa-globe me-2"></i>
                        @(Model.IsPublished ? "Edit Published Product" : "Publish Product to Marketplace")
                    </h4>
                </div>
                <div class="card-body">
                    <form asp-action="PublishToMarketplace" method="post" enctype="multipart/form-data">
                        <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                        <input type="hidden" asp-for="ProductId" />
                        <input type="hidden" asp-for="Description" value="@Model.MarketplaceDescription" id="description" />
                        <input type="hidden" asp-for="ProductName" value="@Model.ProductName" />

                        <div class="alert alert-info">
                            <i class="fas fa-info-circle me-2"></i>
                            You are managing marketplace settings for <strong>@Model.ProductName</strong>
                        </div>

                        <div class="form-group mb-3">
                            <div class="form-check form-switch">
                                <input class="form-check-input" type="checkbox" asp-for="IsPublished" id="isPublished">
                                <label class="form-check-label" asp-for="IsPublished">Publish to Marketplace</label>
                            </div>
                            <small class="text-muted">When enabled, this product will be visible to customers in the marketplace.</small>
                        </div>

                        <div id="marketplaceOptions">
                            <div class="form-group mb-3">
                                <label asp-for="MarketplaceDescription" class="control-label"></label>
                                <textarea asp-for="MarketplaceDescription" id="description2" class="form-control" rows="5"></textarea>
                                <span asp-validation-for="MarketplaceDescription" class="text-danger"></span>
                                <small class="text-muted">Provide a detailed description that will appear in the marketplace. Good descriptions help customers make purchasing decisions.</small>
                            </div>

                            <div class="form-group mb-3">
                                <label asp-for="MarketplacePrice" class="control-label"></label>
                                <input asp-for="MarketplacePrice" class="form-control" />
                                <span asp-validation-for="MarketplacePrice" class="text-danger"></span>
                                <small class="text-muted">You can set a different price for the marketplace than your inventory price.</small>
                            </div>

                            <div class="form-group mb-3">
                                <div class="form-check form-switch">
                                    <input class="form-check-input" type="checkbox" asp-for="DisplayFeatured" id="displayFeatured">
                                    <label class="form-check-label" asp-for="DisplayFeatured">Featured Product</label>
                                </div>
                                <small class="text-muted">Featured products receive prominent placement in the marketplace.</small>
                            </div>

                            <!-- Product Images Section -->
                            <div class="form-group mb-4">
                                <label class="control-label">Product Images</label>
                                <div class="progress mb-3" style="display: none;" id="imageCountProgress">
                                    <div class="progress-bar" role="progressbar" style="width: 0%;" aria-valuenow="0" aria-valuemin="0" aria-valuemax="8">0/8 Images</div>
                                </div>
                                <div class="alert alert-info small">
                                    <i class="fas fa-info-circle me-1"></i>
                                    You can upload up to 8 images per product. The main image will be displayed as the primary image in the marketplace.
                                </div>

                                @if (Model.ExistingImages != null && Model.ExistingImages.Any())
                                {
                                    <div class="card mb-3">
                                        <div class="card-header bg-light">
                                            <div class="d-flex justify-content-between align-items-center">
                                                <h6 class="mb-0">Current Images (@Model.ExistingImages.Count/8)</h6>
                                                <a href="#" class="small text-danger" id="toggleDeleteMode">
                                                    <i class="fas fa-trash me-1"></i> Delete Mode
                                                </a>
                                            </div>
                                        </div>
                                        <div class="card-body">
                                            <div class="row" id="existingImagesContainer">
                                            @foreach (var image in Model.ExistingImages)
                                            {
                                                    <div class="col-md-3 mb-3 image-item" data-id="@image.Id">
                                                        <div class="card h-100 @(image.IsMainImage ? "border-primary" : "")">
                                                            <div class="position-relative">
                                                                <img src="@image.ImagePath" alt="@image.Title" class="card-img-top" 
                                                                     style="height: 150px; object-fit: cover;" />
                                                    @if (image.IsMainImage)
                                                    {
                                                                    <span class="position-absolute top-0 start-0 badge bg-primary rounded-0">
                                                                        <i class="fas fa-star me-1"></i> Main
                                                                    </span>
                                                    }
                                                            </div>
                                                            <div class="card-body p-2 d-flex justify-content-between align-items-center">
                                                        <button type="button" class="btn btn-sm btn-outline-primary set-main-btn"
                                                                data-image-id="@image.Id" data-product-id="@Model.ProductId">
                                                            <i class="fas fa-star"></i> Set Main
                                                        </button>
                                                        <button type="button" class="btn btn-sm btn-outline-danger delete-image-btn"
                                                                        data-image-id="@image.Id" style="display:none;">
                                                            <i class="fas fa-trash"></i>
                                                        </button>
                                                            </div>
                                                    </div>
                                                </div>
                                            }
                                            </div>
                                        </div>
                                    </div>
                                }
                                else
                                {
                                    <div class="alert alert-warning">
                                        <i class="fas fa-exclamation-triangle me-2"></i>
                                        No images have been uploaded for this product. Adding high-quality images will increase sales.
                                    </div>
                                }

                                <div class="card mt-3">
                                    <div class="card-header bg-light">
                                        <h6 class="mb-0">Upload New Images</h6>
                                    </div>
                                    <div class="card-body">
                                    <label asp-for="ImageFiles" class="control-label"></label>
                                        <input asp-for="ImageFiles" type="file" multiple class="form-control" accept="image/*" required />
                                    <span asp-validation-for="ImageFiles" class="text-danger"></span>
                                        <small class="text-muted d-block mt-1">
                                            Upload multiple high-quality images (JPG, PNG, GIF). Maximum 5MB per file.
                                            @if (Model.ExistingImages.Any())
                                            {
                                                <span>You can add up to @(8 - Model.ExistingImages.Count) more images.</span>
                                            }
                                            else
                                            {
                                                <span>You can add up to 8 images.</span>
                                            }
                                        </small>
                                    </div>
                                </div>
                            </div>
                        </div>

                        <div class="form-group mt-4 d-flex justify-content-between">
                            <a asp-action="Index" class="btn btn-secondary">
                                <i class="fas fa-arrow-left me-1"></i> Back to List
                            </a>
                            <button type="submit" class="btn btn-success">
                                <i class="fas fa-save me-1"></i> Save Changes
                            </button>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>
</div>
@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
    <script>
        $(document).ready(function () {
            // Toggle marketplace options visibility
            function toggleMarketplaceOptions() {
                if ($('#isPublished').is(':checked')) {
                    $('#marketplaceOptions').slideDown();
                } else {
                    $('#marketplaceOptions').slideUp();
                }
            }

            // Sync description fields
            document.getElementById("description2").addEventListener("input", function () {
                const description = this.value;
                document.getElementById("description").value = description;
            });

            // Initialize options visibility
            toggleMarketplaceOptions();
            $('#isPublished').change(toggleMarketplaceOptions);

            // Update image count progress bar
            function updateImageCountProgress() {
                const existingCount = @Model.ExistingImages.Count;
                const newCount = $('#ImageFiles')[0].files.length;
                const totalCount = existingCount + newCount;
                const percentage = Math.min(100, (totalCount / 8) * 100);
                
                $('#imageCountProgress').show();
                $('#imageCountProgress .progress-bar')
                    .css('width', percentage + '%')
                    .attr('aria-valuenow', totalCount)
                    .text(totalCount + '/8 Images');
                
                if (totalCount >= 8) {
                    $('#imageCountProgress .progress-bar').addClass('bg-success');
                } else {
                    $('#imageCountProgress .progress-bar').removeClass('bg-success');
                }
            }
            
            // Initialize progress bar
            updateImageCountProgress();

            // Set main image handler
            $(document).on('click', '.set-main-btn', function () {
                const imageId = $(this).data('image-id');
                const productId = $(this).data('product-id');

                $.post('@Url.Action("SetMainImage", "Inventory1")', {
                    imageId: imageId,
                    productId: productId
                }, function (response) {
                    if (response.success) {
                        location.reload();
                    } else {
                        alert(response.message || 'Failed to set main image');
                    }
                }).fail(function () {
                    alert('An error occurred');
                });
            });

            // Toggle delete mode
            $('#toggleDeleteMode').click(function(e) {
                e.preventDefault();
                const isDeleteMode = $(this).hasClass('active');
                
                if (isDeleteMode) {
                    // Turn off delete mode
                    $(this).removeClass('active');
                    $('.delete-image-btn').hide();
                    $('.set-main-btn').show();
                } else {
                    // Turn on delete mode
                    $(this).addClass('active');
                    $('.delete-image-btn').show();
                    $('.set-main-btn').hide();
                }
            });

            // Delete image handler
            $(document).on('click', '.delete-image-btn', function () {
                const imageId = $(this).data('image-id');
                const imageItem = $(this).closest('.image-item');

                if (confirm('Are you sure you want to delete this image?')) {
                    $.post('@Url.Action("DeleteImage", "Inventory1")', {
                        imageId: imageId
                    }, function (response) {
                        if (response.success) {
                            imageItem.fadeOut(300, function() {
                                $(this).remove();
                                updateImageCountProgress();
                                
                                // Check if any images remain
                                if ($('.image-item').length === 0) {
                                    location.reload(); // Reload if all images are deleted
                                }
                            });
                        } else {
                            alert(response.message || 'Failed to delete image');
                        }
                    }).fail(function () {
                        alert('An error occurred');
                    });
                }
            });

            // Image preview for newly selected files
            $('#ImageFiles').on('change', function() {
                const files = this.files;
                const maxSize = 5 * 1024 * 1024; // 5MB
                const maxCount = 8 - @Model.ExistingImages.Count;
                let oversizedFiles = [];

                // Check file count
                if (files.length > maxCount) {
                    alert(`You can only upload a maximum of ${maxCount} more images. You selected ${files.length} files.`);
                    $(this).val('');
                    updateImageCountProgress();
                    return;
                }
                
                // Check file sizes
                for (let i = 0; i < files.length; i++) {
                    if (files[i].size > maxSize) {
                        oversizedFiles.push(files[i].name);
                    }
                }

                // Update progress bar
                updateImageCountProgress();
                
                // Alert for oversized files
                if (oversizedFiles.length > 0) {
                    alert("The following file(s) exceed the 5MB limit:\n" + oversizedFiles.join("\n"));
                    // Clear the input
                    $(this).val('');
                    updateImageCountProgress();
                }
            });
        });
    </script>
}
